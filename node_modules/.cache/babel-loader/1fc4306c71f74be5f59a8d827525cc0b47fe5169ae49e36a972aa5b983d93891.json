{"ast":null,"code":"var geojsonArea = require('geojson-area');\nmodule.exports = rewind;\nfunction rewind(gj, outer) {\n  switch (gj && gj.type || null) {\n    case 'FeatureCollection':\n      gj.features = gj.features.map(curryOuter(rewind, outer));\n      return gj;\n    case 'Feature':\n      gj.geometry = rewind(gj.geometry, outer);\n      return gj;\n    case 'Polygon':\n    case 'MultiPolygon':\n      return correct(gj, outer);\n    default:\n      return gj;\n  }\n}\nfunction curryOuter(a, b) {\n  return function (_) {\n    return a(_, b);\n  };\n}\nfunction correct(_, outer) {\n  if (_.type === 'Polygon') {\n    _.coordinates = correctRings(_.coordinates, outer);\n  } else if (_.type === 'MultiPolygon') {\n    _.coordinates = _.coordinates.map(curryOuter(correctRings, outer));\n  }\n  return _;\n}\nfunction correctRings(_, outer) {\n  outer = !!outer;\n  _[0] = wind(_[0], !outer);\n  for (var i = 1; i < _.length; i++) {\n    _[i] = wind(_[i], outer);\n  }\n  return _;\n}\nfunction wind(_, dir) {\n  return cw(_) === dir ? _ : _.reverse();\n}\nfunction cw(_) {\n  return geojsonArea.ring(_) >= 0;\n}","map":{"version":3,"names":["geojsonArea","require","module","exports","rewind","gj","outer","type","features","map","curryOuter","geometry","correct","a","b","_","coordinates","correctRings","wind","i","length","dir","cw","reverse","ring"],"sources":["C:/Users/User/Desktop/smieciasmieci-main/node_modules/geojson-rewind/index.js"],"sourcesContent":["var geojsonArea = require('geojson-area');\r\n\r\nmodule.exports = rewind;\r\n\r\nfunction rewind(gj, outer) {\r\n    switch ((gj && gj.type) || null) {\r\n        case 'FeatureCollection':\r\n            gj.features = gj.features.map(curryOuter(rewind, outer));\r\n            return gj;\r\n        case 'Feature':\r\n            gj.geometry = rewind(gj.geometry, outer);\r\n            return gj;\r\n        case 'Polygon':\r\n        case 'MultiPolygon':\r\n            return correct(gj, outer);\r\n        default:\r\n            return gj;\r\n    }\r\n}\r\n\r\nfunction curryOuter(a, b) {\r\n    return function(_) { return a(_, b); };\r\n}\r\n\r\nfunction correct(_, outer) {\r\n    if (_.type === 'Polygon') {\r\n        _.coordinates = correctRings(_.coordinates, outer);\r\n    } else if (_.type === 'MultiPolygon') {\r\n        _.coordinates = _.coordinates.map(curryOuter(correctRings, outer));\r\n    }\r\n    return _;\r\n}\r\n\r\nfunction correctRings(_, outer) {\r\n    outer = !!outer;\r\n    _[0] = wind(_[0], !outer);\r\n    for (var i = 1; i < _.length; i++) {\r\n        _[i] = wind(_[i], outer);\r\n    }\r\n    return _;\r\n}\r\n\r\nfunction wind(_, dir) {\r\n    return cw(_) === dir ? _ : _.reverse();\r\n}\r\n\r\nfunction cw(_) {\r\n    return geojsonArea.ring(_) >= 0;\r\n}\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEzCC,MAAM,CAACC,OAAO,GAAGC,MAAM;AAEvB,SAASA,MAAMA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACvB,QAASD,EAAE,IAAIA,EAAE,CAACE,IAAI,IAAK,IAAI;IAC3B,KAAK,mBAAmB;MACpBF,EAAE,CAACG,QAAQ,GAAGH,EAAE,CAACG,QAAQ,CAACC,GAAG,CAACC,UAAU,CAACN,MAAM,EAAEE,KAAK,CAAC,CAAC;MACxD,OAAOD,EAAE;IACb,KAAK,SAAS;MACVA,EAAE,CAACM,QAAQ,GAAGP,MAAM,CAACC,EAAE,CAACM,QAAQ,EAAEL,KAAK,CAAC;MACxC,OAAOD,EAAE;IACb,KAAK,SAAS;IACd,KAAK,cAAc;MACf,OAAOO,OAAO,CAACP,EAAE,EAAEC,KAAK,CAAC;IAC7B;MACI,OAAOD,EAAE;EACjB;AACJ;AAEA,SAASK,UAAUA,CAACG,CAAC,EAAEC,CAAC,EAAE;EACtB,OAAO,UAASC,CAAC,EAAE;IAAE,OAAOF,CAAC,CAACE,CAAC,EAAED,CAAC,CAAC;EAAE,CAAC;AAC1C;AAEA,SAASF,OAAOA,CAACG,CAAC,EAAET,KAAK,EAAE;EACvB,IAAIS,CAAC,CAACR,IAAI,KAAK,SAAS,EAAE;IACtBQ,CAAC,CAACC,WAAW,GAAGC,YAAY,CAACF,CAAC,CAACC,WAAW,EAAEV,KAAK,CAAC;EACtD,CAAC,MAAM,IAAIS,CAAC,CAACR,IAAI,KAAK,cAAc,EAAE;IAClCQ,CAAC,CAACC,WAAW,GAAGD,CAAC,CAACC,WAAW,CAACP,GAAG,CAACC,UAAU,CAACO,YAAY,EAAEX,KAAK,CAAC,CAAC;EACtE;EACA,OAAOS,CAAC;AACZ;AAEA,SAASE,YAAYA,CAACF,CAAC,EAAET,KAAK,EAAE;EAC5BA,KAAK,GAAG,CAAC,CAACA,KAAK;EACfS,CAAC,CAAC,CAAC,CAAC,GAAGG,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAACT,KAAK,CAAC;EACzB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/BJ,CAAC,CAACI,CAAC,CAAC,GAAGD,IAAI,CAACH,CAAC,CAACI,CAAC,CAAC,EAAEb,KAAK,CAAC;EAC5B;EACA,OAAOS,CAAC;AACZ;AAEA,SAASG,IAAIA,CAACH,CAAC,EAAEM,GAAG,EAAE;EAClB,OAAOC,EAAE,CAACP,CAAC,CAAC,KAAKM,GAAG,GAAGN,CAAC,GAAGA,CAAC,CAACQ,OAAO,CAAC,CAAC;AAC1C;AAEA,SAASD,EAAEA,CAACP,CAAC,EAAE;EACX,OAAOf,WAAW,CAACwB,IAAI,CAACT,CAAC,CAAC,IAAI,CAAC;AACnC"},"metadata":{},"sourceType":"script","externalDependencies":[]}