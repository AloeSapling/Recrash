{"ast":null,"code":"var _ = require(\"./lodash.custom.js\");\nvar rewind = require(\"geojson-rewind\");\n\n// see https://wiki.openstreetmap.org/wiki/Overpass_turbo/Polygon_Features\nvar polygonFeatures = {};\nrequire(\"osm-polygon-features\").forEach(function (tags) {\n  if (tags.polygon === \"all\") polygonFeatures[tags.key] = true;else {\n    var list = tags.polygon === \"whitelist\" ? \"included_values\" : \"excluded_values\",\n      tagValuesObj = {};\n    tags.values.forEach(function (value) {\n      tagValuesObj[value] = true;\n    });\n    polygonFeatures[tags.key] = {};\n    polygonFeatures[tags.key][list] = tagValuesObj;\n  }\n});\nvar osmtogeojson = {};\nosmtogeojson = function (data, options) {\n  options = _.merge({\n    verbose: false,\n    flatProperties: false,\n    uninterestingTags: {\n      \"source\": true,\n      \"source_ref\": true,\n      \"source:ref\": true,\n      \"history\": true,\n      \"attribution\": true,\n      \"created_by\": true,\n      \"tiger:county\": true,\n      \"tiger:tlid\": true,\n      \"tiger:upload_uuid\": true\n    },\n    polygonFeatures: polygonFeatures\n  }, options);\n  var result;\n  if (typeof XMLDocument !== \"undefined\" && data instanceof XMLDocument || typeof XMLDocument === \"undefined\" && data.childNodes) result = _osmXML2geoJSON(data);else result = _overpassJSON2geoJSON(data);\n  return result;\n  function _overpassJSON2geoJSON(json) {\n    // sort elements\n    var nodes = new Array();\n    var ways = new Array();\n    var rels = new Array();\n    // helper functions\n    function centerGeometry(object) {\n      var pseudoNode = _.clone(object);\n      pseudoNode.lat = object.center.lat;\n      pseudoNode.lon = object.center.lon;\n      pseudoNode.__is_center_placeholder = true;\n      nodes.push(pseudoNode);\n    }\n    function boundsGeometry(object) {\n      var pseudoWay = _.clone(object);\n      pseudoWay.nodes = [];\n      function addPseudoNode(lat, lon, i) {\n        var pseudoNode = {\n          type: \"node\",\n          id: \"_\" + pseudoWay.type + \"/\" + pseudoWay.id + \"bounds\" + i,\n          lat: lat,\n          lon: lon\n        };\n        pseudoWay.nodes.push(pseudoNode.id);\n        nodes.push(pseudoNode);\n      }\n      addPseudoNode(pseudoWay.bounds.minlat, pseudoWay.bounds.minlon, 1);\n      addPseudoNode(pseudoWay.bounds.maxlat, pseudoWay.bounds.minlon, 2);\n      addPseudoNode(pseudoWay.bounds.maxlat, pseudoWay.bounds.maxlon, 3);\n      addPseudoNode(pseudoWay.bounds.minlat, pseudoWay.bounds.maxlon, 4);\n      pseudoWay.nodes.push(pseudoWay.nodes[0]);\n      pseudoWay.__is_bounds_placeholder = true;\n      ways.push(pseudoWay);\n    }\n    function fullGeometryWay(way) {\n      function addFullGeometryNode(lat, lon, id) {\n        var geometryNode = {\n          type: \"node\",\n          id: id,\n          lat: lat,\n          lon: lon,\n          __is_uninteresting: true\n        };\n        nodes.push(geometryNode);\n      }\n      if (!_.isArray(way.nodes)) {\n        way.nodes = way.geometry.map(function (nd) {\n          if (nd !== null)\n            // have to skip ref-less nodes\n            return \"_anonymous@\" + nd.lat + \"/\" + nd.lon;else return \"_anonymous@unknown_location\";\n        });\n      }\n      way.geometry.forEach(function (nd, i) {\n        if (nd) {\n          addFullGeometryNode(nd.lat, nd.lon, way.nodes[i]);\n        }\n      });\n    }\n    function fullGeometryRelation(rel) {\n      function addFullGeometryNode(lat, lon, id) {\n        var geometryNode = {\n          type: \"node\",\n          id: id,\n          lat: lat,\n          lon: lon\n        };\n        nodes.push(geometryNode);\n      }\n      function addFullGeometryWay(geometry, id) {\n        // shared multipolygon ways cannot be defined multiple times with the same id.\n        if (ways.some(function (way) {\n          // todo: this is slow :(\n          return way.type == \"way\" && way.id == id;\n        })) return;\n        var geometryWay = {\n          type: \"way\",\n          id: id,\n          nodes: []\n        };\n        function addFullGeometryWayPseudoNode(lat, lon) {\n          // todo? do not save the same pseudo node multiple times\n          var geometryPseudoNode = {\n            type: \"node\",\n            id: \"_anonymous@\" + lat + \"/\" + lon,\n            lat: lat,\n            lon: lon,\n            __is_uninteresting: true\n          };\n          geometryWay.nodes.push(geometryPseudoNode.id);\n          nodes.push(geometryPseudoNode);\n        }\n        geometry.forEach(function (nd) {\n          if (nd) {\n            addFullGeometryWayPseudoNode(nd.lat, nd.lon);\n          } else {\n            geometryWay.nodes.push(undefined);\n          }\n        });\n        ways.push(geometryWay);\n      }\n      rel.members.forEach(function (member, i) {\n        if (member.type == \"node\") {\n          if (member.lat) {\n            addFullGeometryNode(member.lat, member.lon, member.ref);\n          }\n        } else if (member.type == \"way\") {\n          if (member.geometry) {\n            member.ref = \"_fullGeom\" + member.ref;\n            addFullGeometryWay(member.geometry, member.ref);\n          }\n        }\n      });\n    }\n    // create copies of individual json objects to make sure the original data doesn't get altered\n    // todo: cloning is slow: see if this can be done differently!\n    for (var i = 0; i < json.elements.length; i++) {\n      switch (json.elements[i].type) {\n        case \"node\":\n          var node = json.elements[i];\n          nodes.push(node);\n          break;\n        case \"way\":\n          var way = _.clone(json.elements[i]);\n          way.nodes = _.clone(way.nodes);\n          ways.push(way);\n          if (way.center) centerGeometry(way);\n          if (way.geometry) fullGeometryWay(way);else if (way.bounds) boundsGeometry(way);\n          break;\n        case \"relation\":\n          var rel = _.clone(json.elements[i]);\n          rel.members = _.clone(rel.members);\n          rels.push(rel);\n          var has_full_geometry = rel.members && rel.members.some(function (member) {\n            return member.type == \"node\" && member.lat || member.type == \"way\" && member.geometry && member.geometry.length > 0;\n          });\n          if (rel.center) centerGeometry(rel);\n          if (has_full_geometry) fullGeometryRelation(rel);else if (rel.bounds) boundsGeometry(rel);\n          break;\n        default:\n        // type=area (from coord-query) is an example for this case.\n      }\n    }\n\n    return _convert2geoJSON(nodes, ways, rels);\n  }\n  function _osmXML2geoJSON(xml) {\n    // sort elements\n    var nodes = new Array();\n    var ways = new Array();\n    var rels = new Array();\n    // helper function\n    function copy_attribute(x, o, attr) {\n      if (x.hasAttribute(attr)) o[attr] = x.getAttribute(attr);\n    }\n    function centerGeometry(object, centroid) {\n      var pseudoNode = _.clone(object);\n      copy_attribute(centroid, pseudoNode, 'lat');\n      copy_attribute(centroid, pseudoNode, 'lon');\n      pseudoNode.__is_center_placeholder = true;\n      nodes.push(pseudoNode);\n    }\n    function boundsGeometry(object, bounds) {\n      var pseudoWay = _.clone(object);\n      pseudoWay.nodes = [];\n      function addPseudoNode(lat, lon, i) {\n        var pseudoNode = {\n          type: \"node\",\n          id: \"_\" + pseudoWay.type + \"/\" + pseudoWay.id + \"bounds\" + i,\n          lat: lat,\n          lon: lon\n        };\n        pseudoWay.nodes.push(pseudoNode.id);\n        nodes.push(pseudoNode);\n      }\n      addPseudoNode(bounds.getAttribute('minlat'), bounds.getAttribute('minlon'), 1);\n      addPseudoNode(bounds.getAttribute('maxlat'), bounds.getAttribute('minlon'), 2);\n      addPseudoNode(bounds.getAttribute('maxlat'), bounds.getAttribute('maxlon'), 3);\n      addPseudoNode(bounds.getAttribute('minlat'), bounds.getAttribute('maxlon'), 4);\n      pseudoWay.nodes.push(pseudoWay.nodes[0]);\n      pseudoWay.__is_bounds_placeholder = true;\n      ways.push(pseudoWay);\n    }\n    function fullGeometryWay(way, nds) {\n      function addFullGeometryNode(lat, lon, id) {\n        var geometryNode = {\n          type: \"node\",\n          id: id,\n          lat: lat,\n          lon: lon,\n          __is_uninteresting: true\n        };\n        nodes.push(geometryNode);\n        return geometryNode.id;\n      }\n      if (!_.isArray(way.nodes)) {\n        way.nodes = [];\n        _.each(nds, function (nd, i) {\n          way.nodes.push(\"_anonymous@\" + nd.getAttribute('lat') + \"/\" + nd.getAttribute('lon'));\n        });\n      }\n      _.each(nds, function (nd, i) {\n        if (nd.getAttribute('lat')) {\n          addFullGeometryNode(nd.getAttribute('lat'), nd.getAttribute('lon'), way.nodes[i]);\n        }\n      });\n    }\n    function fullGeometryRelation(rel, members) {\n      function addFullGeometryNode(lat, lon, id) {\n        var geometryNode = {\n          type: \"node\",\n          id: id,\n          lat: lat,\n          lon: lon\n        };\n        nodes.push(geometryNode);\n      }\n      function addFullGeometryWay(nds, id) {\n        // shared multipolygon ways cannot be defined multiple times with the same id.\n        if (ways.some(function (way) {\n          // todo: this is slow :(\n          return way.type == \"way\" && way.id == id;\n        })) return;\n        var geometryWay = {\n          type: \"way\",\n          id: id,\n          nodes: []\n        };\n        function addFullGeometryWayPseudoNode(lat, lon) {\n          // todo? do not save the same pseudo node multiple times\n          var geometryPseudoNode = {\n            type: \"node\",\n            id: \"_anonymous@\" + lat + \"/\" + lon,\n            lat: lat,\n            lon: lon,\n            __is_uninteresting: true\n          };\n          geometryWay.nodes.push(geometryPseudoNode.id);\n          nodes.push(geometryPseudoNode);\n        }\n        _.each(nds, function (nd) {\n          if (nd.getAttribute('lat')) {\n            addFullGeometryWayPseudoNode(nd.getAttribute('lat'), nd.getAttribute('lon'));\n          } else {\n            geometryWay.nodes.push(undefined);\n          }\n        });\n        ways.push(geometryWay);\n      }\n      _.each(members, function (member, i) {\n        if (rel.members[i].type == \"node\") {\n          if (member.getAttribute('lat')) {\n            addFullGeometryNode(member.getAttribute('lat'), member.getAttribute('lon'), rel.members[i].ref);\n          }\n        } else if (rel.members[i].type == \"way\") {\n          if (member.getElementsByTagName('nd').length > 0) {\n            rel.members[i].ref = \"_fullGeom\" + rel.members[i].ref;\n            addFullGeometryWay(member.getElementsByTagName('nd'), rel.members[i].ref);\n          }\n        }\n      });\n    }\n    // nodes\n    _.each(xml.getElementsByTagName('node'), function (node, i) {\n      var tags = {};\n      _.each(node.getElementsByTagName('tag'), function (tag) {\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\n      });\n      var nodeObject = {\n        'type': 'node'\n      };\n      copy_attribute(node, nodeObject, 'id');\n      copy_attribute(node, nodeObject, 'lat');\n      copy_attribute(node, nodeObject, 'lon');\n      copy_attribute(node, nodeObject, 'version');\n      copy_attribute(node, nodeObject, 'timestamp');\n      copy_attribute(node, nodeObject, 'changeset');\n      copy_attribute(node, nodeObject, 'uid');\n      copy_attribute(node, nodeObject, 'user');\n      if (!_.isEmpty(tags)) nodeObject.tags = tags;\n      nodes.push(nodeObject);\n    });\n    // ways\n    var centroid, bounds;\n    _.each(xml.getElementsByTagName('way'), function (way, i) {\n      var tags = {};\n      var wnodes = [];\n      _.each(way.getElementsByTagName('tag'), function (tag) {\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\n      });\n      var has_full_geometry = false;\n      _.each(way.getElementsByTagName('nd'), function (nd, i) {\n        var id;\n        if (id = nd.getAttribute('ref')) wnodes[i] = id;\n        if (!has_full_geometry && nd.getAttribute('lat')) has_full_geometry = true;\n      });\n      var wayObject = {\n        \"type\": \"way\"\n      };\n      copy_attribute(way, wayObject, 'id');\n      copy_attribute(way, wayObject, 'version');\n      copy_attribute(way, wayObject, 'timestamp');\n      copy_attribute(way, wayObject, 'changeset');\n      copy_attribute(way, wayObject, 'uid');\n      copy_attribute(way, wayObject, 'user');\n      if (wnodes.length > 0) wayObject.nodes = wnodes;\n      if (!_.isEmpty(tags)) wayObject.tags = tags;\n      if (centroid = way.getElementsByTagName('center')[0]) centerGeometry(wayObject, centroid);\n      if (has_full_geometry) fullGeometryWay(wayObject, way.getElementsByTagName('nd'));else if (bounds = way.getElementsByTagName('bounds')[0]) boundsGeometry(wayObject, bounds);\n      ways.push(wayObject);\n    });\n    // relations\n    _.each(xml.getElementsByTagName('relation'), function (relation, i) {\n      var tags = {};\n      var members = [];\n      _.each(relation.getElementsByTagName('tag'), function (tag) {\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\n      });\n      var has_full_geometry = false;\n      _.each(relation.getElementsByTagName('member'), function (member, i) {\n        members[i] = {};\n        copy_attribute(member, members[i], 'ref');\n        copy_attribute(member, members[i], 'role');\n        copy_attribute(member, members[i], 'type');\n        if (!has_full_geometry && members[i].type == 'node' && member.getAttribute('lat') || members[i].type == 'way' && member.getElementsByTagName('nd').length > 0) has_full_geometry = true;\n      });\n      var relObject = {\n        \"type\": \"relation\"\n      };\n      copy_attribute(relation, relObject, 'id');\n      copy_attribute(relation, relObject, 'version');\n      copy_attribute(relation, relObject, 'timestamp');\n      copy_attribute(relation, relObject, 'changeset');\n      copy_attribute(relation, relObject, 'uid');\n      copy_attribute(relation, relObject, 'user');\n      if (members.length > 0) relObject.members = members;\n      if (!_.isEmpty(tags)) relObject.tags = tags;\n      if (centroid = relation.getElementsByTagName('center')[0]) centerGeometry(relObject, centroid);\n      if (has_full_geometry) fullGeometryRelation(relObject, relation.getElementsByTagName('member'));else if (bounds = relation.getElementsByTagName('bounds')[0]) boundsGeometry(relObject, bounds);\n      rels.push(relObject);\n    });\n    return _convert2geoJSON(nodes, ways, rels);\n  }\n  function _convert2geoJSON(nodes, ways, rels) {\n    // helper function that checks if there are any tags other than \"created_by\", \"source\", etc. or any tag provided in ignore_tags\n    function has_interesting_tags(t, ignore_tags) {\n      if (typeof ignore_tags !== \"object\") ignore_tags = {};\n      if (typeof options.uninterestingTags === \"function\") return !options.uninterestingTags(t, ignore_tags);\n      for (var k in t) if (!(options.uninterestingTags[k] === true) && !(ignore_tags[k] === true || ignore_tags[k] === t[k])) return true;\n      return false;\n    }\n    ;\n    // helper function to extract meta information\n    function build_meta_information(object) {\n      var res = {\n        \"timestamp\": object.timestamp,\n        \"version\": object.version,\n        \"changeset\": object.changeset,\n        \"user\": object.user,\n        \"uid\": object.uid\n      };\n      for (var k in res) if (res[k] === undefined) delete res[k];\n      return res;\n    }\n\n    // some data processing (e.g. filter nodes only used for ways)\n    var nodeids = new Object();\n    for (var i = 0; i < nodes.length; i++) {\n      if (nodes[i].lat === undefined) {\n        if (options.verbose) console.warn('Node', nodes[i].type + '/' + nodes[i].id, 'ignored because it has no coordinates');\n        continue; // ignore nodes without coordinates (e.g. returned by an ids_only query)\n      }\n\n      nodeids[nodes[i].id] = nodes[i];\n    }\n    var poinids = new Object();\n    for (var i = 0; i < nodes.length; i++) {\n      if (typeof nodes[i].tags != 'undefined' && has_interesting_tags(nodes[i].tags))\n        // this checks if the node has any tags other than \"created_by\"\n        poinids[nodes[i].id] = true;\n    }\n    for (var i = 0; i < rels.length; i++) {\n      if (!_.isArray(rels[i].members)) {\n        if (options.verbose) console.warn('Relation', rels[i].type + '/' + rels[i].id, 'ignored because it has no members');\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\n      }\n\n      for (var j = 0; j < rels[i].members.length; j++) {\n        if (rels[i].members[j].type == \"node\") poinids[rels[i].members[j].ref] = true;\n      }\n    }\n    var wayids = new Object();\n    var waynids = new Object();\n    for (var i = 0; i < ways.length; i++) {\n      if (!_.isArray(ways[i].nodes)) {\n        if (options.verbose) console.warn('Way', ways[i].type + '/' + ways[i].id, 'ignored because it has no nodes');\n        continue; // ignore ways without nodes (e.g. returned by an ids_only query)\n      }\n\n      wayids[ways[i].id] = ways[i];\n      for (var j = 0; j < ways[i].nodes.length; j++) {\n        waynids[ways[i].nodes[j]] = true;\n        ways[i].nodes[j] = nodeids[ways[i].nodes[j]];\n      }\n    }\n    var pois = new Array();\n    for (var i = 0; i < nodes.length; i++) {\n      if ((!waynids[nodes[i].id] || poinids[nodes[i].id]) && !nodes[i].__is_uninteresting) pois.push(nodes[i]);\n    }\n    var relids = new Array();\n    for (var i = 0; i < rels.length; i++) {\n      if (!_.isArray(rels[i].members)) {\n        if (options.verbose) console.warn('Relation', rels[i].type + '/' + rels[i].id, 'ignored because it has no members');\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\n      }\n\n      relids[rels[i].id] = rels[i];\n    }\n    var relsmap = {\n      node: {},\n      way: {},\n      relation: {}\n    };\n    for (var i = 0; i < rels.length; i++) {\n      if (!_.isArray(rels[i].members)) {\n        if (options.verbose) console.warn('Relation', rels[i].type + '/' + rels[i].id, 'ignored because it has no members');\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\n      }\n\n      for (var j = 0; j < rels[i].members.length; j++) {\n        var m_type = rels[i].members[j].type;\n        var m_ref = rels[i].members[j].ref;\n        if (typeof m_ref !== \"number\") {\n          // de-namespace full geometry content\n          m_ref = m_ref.replace(\"_fullGeom\", \"\");\n        }\n        if (!relsmap[m_type]) {\n          if (options.verbose) console.warn('Relation', rels[i].type + '/' + rels[i].id, 'member', m_type + '/' + m_ref, 'ignored because it has an invalid type');\n          continue;\n        }\n        if (typeof relsmap[m_type][m_ref] === \"undefined\") relsmap[m_type][m_ref] = [];\n        relsmap[m_type][m_ref].push({\n          \"role\": rels[i].members[j].role,\n          \"rel\": rels[i].id,\n          \"reltags\": rels[i].tags\n        });\n      }\n    }\n    // construct geojson\n    var geojson;\n    var geojsonnodes = {\n      \"type\": \"FeatureCollection\",\n      \"features\": new Array()\n    };\n    for (i = 0; i < pois.length; i++) {\n      if (typeof pois[i].lon == \"undefined\" || typeof pois[i].lat == \"undefined\") {\n        if (options.verbose) console.warn('POI', pois[i].type + '/' + pois[i].id, 'ignored because it lacks coordinates');\n        continue; // lon and lat are required for showing a point\n      }\n\n      var feature = {\n        \"type\": \"Feature\",\n        \"id\": pois[i].type + \"/\" + pois[i].id,\n        \"properties\": {\n          \"type\": pois[i].type,\n          \"id\": pois[i].id,\n          \"tags\": pois[i].tags || {},\n          \"relations\": relsmap[\"node\"][pois[i].id] || [],\n          \"meta\": build_meta_information(pois[i])\n        },\n        \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [+pois[i].lon, +pois[i].lat]\n        }\n      };\n      if (pois[i].__is_center_placeholder) feature.properties[\"geometry\"] = \"center\";\n      geojsonnodes.features.push(feature);\n    }\n    var geojsonlines = {\n      \"type\": \"FeatureCollection\",\n      \"features\": new Array()\n    };\n    var geojsonpolygons = {\n      \"type\": \"FeatureCollection\",\n      \"features\": new Array()\n    };\n    // process multipolygons\n    for (var i = 0; i < rels.length; i++) {\n      if (typeof rels[i].tags != \"undefined\" && (rels[i].tags[\"type\"] == \"multipolygon\" || rels[i].tags[\"type\"] == \"boundary\")) {\n        if (!_.isArray(rels[i].members)) {\n          if (options.verbose) console.warn('Multipolygon', rels[i].type + '/' + rels[i].id, 'ignored because it has no members');\n          continue; // ignore relations without members (e.g. returned by an ids_only query)\n        }\n\n        var outer_count = 0;\n        for (var j = 0; j < rels[i].members.length; j++) if (rels[i].members[j].role == \"outer\") outer_count++;else if (options.verbose && rels[i].members[j].role != \"inner\") console.warn('Multipolygon', rels[i].type + '/' + rels[i].id, 'member', rels[i].members[j].type + '/' + rels[i].members[j].ref, 'ignored because it has an invalid role: \"' + rels[i].members[j].role + '\"');\n        rels[i].members.forEach(function (m) {\n          if (wayids[m.ref]) {\n            // this even works in the following corner case:\n            // a multipolygon amenity=xxx with outer line tagged amenity=yyy\n            // see https://github.com/tyrasd/osmtogeojson/issues/7\n            if (m.role === \"outer\" && !has_interesting_tags(wayids[m.ref].tags, rels[i].tags)) wayids[m.ref].is_multipolygon_outline = true;\n            if (m.role === \"inner\" && !has_interesting_tags(wayids[m.ref].tags)) wayids[m.ref].is_multipolygon_outline = true;\n          }\n        });\n        if (outer_count == 0) {\n          if (options.verbose) console.warn('Multipolygon relation', rels[i].type + '/' + rels[i].id, 'ignored because it has no outer ways');\n          continue; // ignore multipolygons without outer ways\n        }\n\n        var simple_mp = false;\n        var mp_geometry = '';\n        if (outer_count == 1 && !has_interesting_tags(rels[i].tags, {\n          \"type\": true\n        })) simple_mp = true;\n        var feature = null;\n        if (!simple_mp) {\n          feature = construct_multipolygon(rels[i], rels[i]);\n        } else {\n          // simple multipolygon\n          var outer_way = rels[i].members.filter(function (m) {\n            return m.role === \"outer\";\n          })[0];\n          outer_way = wayids[outer_way.ref];\n          if (outer_way === undefined) {\n            if (options.verbose) console.warn('Multipolygon relation', rels[i].type + '/' + rels[i].id, 'ignored because outer way', outer_way.type + '/' + outer_way.ref, 'is missing');\n            continue; // abort if outer way object is not present\n          }\n\n          outer_way.is_multipolygon_outline = true;\n          feature = construct_multipolygon(outer_way, rels[i]);\n        }\n        if (feature === false) {\n          if (options.verbose) console.warn('Multipolygon relation', rels[i].type + '/' + rels[i].id, 'ignored because it has invalid geometry');\n          continue; // abort if feature could not be constructed\n        }\n\n        geojsonpolygons.features.push(feature);\n        function construct_multipolygon(tag_object, rel) {\n          var is_tainted = false;\n          var mp_geometry = simple_mp ? 'way' : 'relation',\n            mp_id = typeof tag_object.id === \"number\" ? tag_object.id : +tag_object.id.replace(\"_fullGeom\", \"\");\n          // prepare mp members\n          var members;\n          members = rel.members.filter(function (m) {\n            return m.type === \"way\";\n          });\n          members = members.map(function (m) {\n            var way = wayids[m.ref];\n            if (way === undefined) {\n              // check for missing ways\n              if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'tainted by a missing way', m.type + '/' + m.ref);\n              is_tainted = true;\n              return;\n            }\n            return {\n              // TODO: this is slow! :(\n              id: m.ref,\n              role: m.role || \"outer\",\n              way: way,\n              nodes: way.nodes.filter(function (n) {\n                if (n !== undefined) return true;\n                is_tainted = true;\n                if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'tainted by a way', m.type + '/' + m.ref, 'with a missing node');\n                return false;\n              })\n            };\n          });\n          members = _.compact(members);\n          // construct outer and inner rings\n          var outers, inners;\n          function join(ways) {\n            var _first = function (arr) {\n              return arr[0];\n            };\n            var _last = function (arr) {\n              return arr[arr.length - 1];\n            };\n            // stolen from iD/relation.js\n            var joined = [],\n              current,\n              first,\n              last,\n              i,\n              how,\n              what;\n            while (ways.length) {\n              current = ways.pop().nodes.slice();\n              joined.push(current);\n              while (ways.length && _first(current) !== _last(current)) {\n                first = _first(current);\n                last = _last(current);\n                for (i = 0; i < ways.length; i++) {\n                  what = ways[i].nodes;\n                  if (last === _first(what)) {\n                    how = current.push;\n                    what = what.slice(1);\n                    break;\n                  } else if (last === _last(what)) {\n                    how = current.push;\n                    what = what.slice(0, -1).reverse();\n                    break;\n                  } else if (first == _last(what)) {\n                    how = current.unshift;\n                    what = what.slice(0, -1);\n                    break;\n                  } else if (first == _first(what)) {\n                    how = current.unshift;\n                    what = what.slice(1).reverse();\n                    break;\n                  } else {\n                    what = how = null;\n                  }\n                }\n                if (!what) {\n                  if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'contains unclosed ring geometry');\n                  break; // Invalid geometry (dangling way, unclosed ring)\n                }\n\n                ways.splice(i, 1);\n                how.apply(current, what);\n              }\n            }\n            return joined;\n          }\n          outers = join(members.filter(function (m) {\n            return m.role === \"outer\";\n          }));\n          inners = join(members.filter(function (m) {\n            return m.role === \"inner\";\n          }));\n          // sort rings\n          var mp;\n          function findOuter(inner) {\n            var polygonIntersectsPolygon = function (outer, inner) {\n              for (var i = 0; i < inner.length; i++) if (pointInPolygon(inner[i], outer)) return true;\n              return false;\n            };\n            var mapCoordinates = function (from) {\n              return from.map(function (n) {\n                return [+n.lat, +n.lon];\n              });\n            };\n            // stolen from iD/geo.js,\n            // based on https://github.com/substack/point-in-polygon,\n            // ray-casting algorithm based on http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n            var pointInPolygon = function (point, polygon) {\n              var x = point[0],\n                y = point[1],\n                inside = false;\n              for (var i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n                var xi = polygon[i][0],\n                  yi = polygon[i][1];\n                var xj = polygon[j][0],\n                  yj = polygon[j][1];\n                var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n                if (intersect) inside = !inside;\n              }\n              return inside;\n            };\n            // stolen from iD/relation.js\n            var o, outer;\n            // todo: all this coordinate mapping makes this unneccesarily slow.\n            // see the \"todo: this is slow! :(\" above.\n            inner = mapCoordinates(inner);\n            /*for (o = 0; o < outers.length; o++) {\r\n              outer = mapCoordinates(outers[o]);\r\n              if (polygonContainsPolygon(outer, inner))\r\n                return o;\r\n            }*/\n            for (o = 0; o < outers.length; o++) {\n              outer = mapCoordinates(outers[o]);\n              if (polygonIntersectsPolygon(outer, inner)) return o;\n            }\n          }\n          mp = outers.map(function (o) {\n            return [o];\n          });\n          for (var j = 0; j < inners.length; j++) {\n            var o = findOuter(inners[j]);\n            if (o !== undefined) mp[o].push(inners[j]);else if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'contains an inner ring with no containing outer');\n            // so, no outer ring for this inner ring is found.\n            // We're going to ignore holes in empty space.\n            ;\n          }\n          // sanitize mp-coordinates (remove empty clusters or rings, {lat,lon,...} to [lon,lat]\n          var mp_coords = [];\n          mp_coords = _.compact(mp.map(function (cluster) {\n            var cl = _.compact(cluster.map(function (ring) {\n              if (ring.length < 4) {\n                // todo: is this correct: ring.length < 4 ?\n                if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'contains a ring with less than four nodes');\n                return;\n              }\n              return _.compact(ring.map(function (node) {\n                return [+node.lon, +node.lat];\n              }));\n            }));\n            if (cl.length == 0) {\n              if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'contains an empty ring cluster');\n              return;\n            }\n            return cl;\n          }));\n          if (mp_coords.length == 0) {\n            if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'contains no coordinates');\n            return false; // ignore multipolygons without coordinates\n          }\n\n          var mp_type = \"MultiPolygon\";\n          if (mp_coords.length === 1) {\n            mp_type = \"Polygon\";\n            mp_coords = mp_coords[0];\n          }\n          // mp parsed, now construct the geoJSON\n          var feature = {\n            \"type\": \"Feature\",\n            \"id\": tag_object.type + \"/\" + mp_id,\n            \"properties\": {\n              \"type\": tag_object.type,\n              \"id\": mp_id,\n              \"tags\": tag_object.tags || {},\n              \"relations\": relsmap[tag_object.type][tag_object.id] || [],\n              \"meta\": build_meta_information(tag_object)\n            },\n            \"geometry\": {\n              \"type\": mp_type,\n              \"coordinates\": mp_coords\n            }\n          };\n          if (is_tainted) {\n            if (options.verbose) console.warn('Multipolygon', mp_geometry + '/' + mp_id, 'is tainted');\n            feature.properties[\"tainted\"] = true;\n          }\n          return feature;\n        }\n      }\n    }\n    // process lines and polygons\n    for (var i = 0; i < ways.length; i++) {\n      if (!_.isArray(ways[i].nodes)) {\n        if (options.verbose) console.warn('Way', ways[i].type + '/' + ways[i].id, 'ignored because it has no nodes');\n        continue; // ignore ways without nodes (e.g. returned by an ids_only query)\n      }\n\n      if (ways[i].is_multipolygon_outline) continue; // ignore ways which are already rendered as (part of) a multipolygon\n      if (typeof ways[i].id !== \"number\") {\n        // remove full geometry namespace for output\n        ways[i].id = +ways[i].id.replace(\"_fullGeom\", \"\");\n      }\n      ways[i].tainted = false;\n      ways[i].hidden = false;\n      var coords = new Array();\n      for (j = 0; j < ways[i].nodes.length; j++) {\n        if (typeof ways[i].nodes[j] == \"object\") coords.push([+ways[i].nodes[j].lon, +ways[i].nodes[j].lat]);else {\n          if (options.verbose) console.warn('Way', ways[i].type + '/' + ways[i].id, 'is tainted by an invalid node');\n          ways[i].tainted = true;\n        }\n      }\n      if (coords.length <= 1) {\n        // invalid way geometry\n        if (options.verbose) console.warn('Way', ways[i].type + '/' + ways[i].id, 'ignored because it contains too few nodes');\n        continue;\n      }\n      var way_type = \"LineString\"; // default\n      if (typeof ways[i].nodes[0] != \"undefined\" &&\n      // way has its nodes loaded\n      ways[i].nodes[0] === ways[i].nodes[ways[i].nodes.length - 1] && (\n      // ... and forms a closed ring\n\n      typeof ways[i].tags != \"undefined\" &&\n      // ... and has tags\n      _isPolygonFeature(ways[i].tags) // ... and tags say it is a polygon\n      ||\n      // or is a placeholder for a bounds geometry\n      ways[i].__is_bounds_placeholder)) {\n        way_type = \"Polygon\";\n        coords = [coords];\n      }\n      var feature = {\n        \"type\": \"Feature\",\n        \"id\": ways[i].type + \"/\" + ways[i].id,\n        \"properties\": {\n          \"type\": ways[i].type,\n          \"id\": ways[i].id,\n          \"tags\": ways[i].tags || {},\n          \"relations\": relsmap[\"way\"][ways[i].id] || [],\n          \"meta\": build_meta_information(ways[i])\n        },\n        \"geometry\": {\n          \"type\": way_type,\n          \"coordinates\": coords\n        }\n      };\n      if (ways[i].tainted) {\n        if (options.verbose) console.warn('Way', ways[i].type + '/' + ways[i].id, 'is tainted');\n        feature.properties[\"tainted\"] = true;\n      }\n      if (ways[i].__is_bounds_placeholder) feature.properties[\"geometry\"] = \"bounds\";\n      if (way_type == \"LineString\") geojsonlines.features.push(feature);else geojsonpolygons.features.push(feature);\n    }\n    geojson = {\n      \"type\": \"FeatureCollection\",\n      \"features\": []\n    };\n    geojson.features = geojson.features.concat(geojsonpolygons.features);\n    geojson.features = geojson.features.concat(geojsonlines.features);\n    geojson.features = geojson.features.concat(geojsonnodes.features);\n    // optionally, flatten properties\n    if (options.flatProperties) {\n      geojson.features.forEach(function (f) {\n        f.properties = _.merge(f.properties.meta, f.properties.tags, {\n          id: f.properties.type + \"/\" + f.properties.id\n        });\n      });\n    }\n    // fix polygon winding\n    geojson = rewind(geojson, true /*remove for geojson-rewind >0.1.0*/);\n    return geojson;\n  }\n  function _isPolygonFeature(tags) {\n    var polygonFeatures = options.polygonFeatures;\n    if (typeof polygonFeatures === \"function\") return polygonFeatures(tags);\n    // explicitely tagged non-areas\n    if (tags['area'] === 'no') return false;\n    // assuming that a typical OSM way has in average less tags than\n    // the polygonFeatures list, this way around should be faster\n    for (var key in tags) {\n      var val = tags[key];\n      var pfk = polygonFeatures[key];\n      // continue with next if tag is unknown or not \"categorizing\"\n      if (typeof pfk === 'undefined') continue;\n      // continue with next if tag is explicitely un-set (\"building=no\")\n      if (val === 'no') continue;\n      // check polygon features for: general acceptance, included or excluded values\n      if (pfk === true) return true;\n      if (pfk.included_values && pfk.included_values[val] === true) return true;\n      if (pfk.excluded_values && pfk.excluded_values[val] !== true) return true;\n    }\n    // if no tags matched, this ain't no area.\n    return false;\n  }\n};\n\n// for backwards compatibility\nosmtogeojson.toGeojson = osmtogeojson;\nmodule.exports = osmtogeojson;","map":{"version":3,"names":["_","require","rewind","polygonFeatures","forEach","tags","polygon","key","list","tagValuesObj","values","value","osmtogeojson","data","options","merge","verbose","flatProperties","uninterestingTags","result","XMLDocument","childNodes","_osmXML2geoJSON","_overpassJSON2geoJSON","json","nodes","Array","ways","rels","centerGeometry","object","pseudoNode","clone","lat","center","lon","__is_center_placeholder","push","boundsGeometry","pseudoWay","addPseudoNode","i","type","id","bounds","minlat","minlon","maxlat","maxlon","__is_bounds_placeholder","fullGeometryWay","way","addFullGeometryNode","geometryNode","__is_uninteresting","isArray","geometry","map","nd","fullGeometryRelation","rel","addFullGeometryWay","some","geometryWay","addFullGeometryWayPseudoNode","geometryPseudoNode","undefined","members","member","ref","elements","length","node","has_full_geometry","_convert2geoJSON","xml","copy_attribute","x","o","attr","hasAttribute","getAttribute","centroid","nds","each","getElementsByTagName","tag","nodeObject","isEmpty","wnodes","wayObject","relation","relObject","has_interesting_tags","t","ignore_tags","k","build_meta_information","res","timestamp","version","changeset","user","uid","nodeids","Object","console","warn","poinids","j","wayids","waynids","pois","relids","relsmap","m_type","m_ref","replace","role","geojson","geojsonnodes","feature","properties","features","geojsonlines","geojsonpolygons","outer_count","m","is_multipolygon_outline","simple_mp","mp_geometry","construct_multipolygon","outer_way","filter","tag_object","is_tainted","mp_id","n","compact","outers","inners","join","_first","arr","_last","joined","current","first","last","how","what","pop","slice","reverse","unshift","splice","apply","mp","findOuter","inner","polygonIntersectsPolygon","outer","pointInPolygon","mapCoordinates","from","point","y","inside","xi","yi","xj","yj","intersect","mp_coords","cluster","cl","ring","mp_type","tainted","hidden","coords","way_type","_isPolygonFeature","concat","f","meta","val","pfk","included_values","excluded_values","toGeojson","module","exports"],"sources":["C:/Users/Komputer 2020/Desktop/hakaton-projekt/node_modules/osmtogeojson/index.js"],"sourcesContent":["var _ = require(\"./lodash.custom.js\");\r\nvar rewind = require(\"geojson-rewind\");\r\n\r\n// see https://wiki.openstreetmap.org/wiki/Overpass_turbo/Polygon_Features\r\nvar polygonFeatures = {};\r\nrequire(\"osm-polygon-features\").forEach(function(tags) {\r\n  if (tags.polygon === \"all\")\r\n    polygonFeatures[tags.key] = true;\r\n  else {\r\n    var list = (tags.polygon === \"whitelist\") ? \"included_values\" : \"excluded_values\",\r\n        tagValuesObj = {};\r\n    tags.values.forEach(function(value) { tagValuesObj[value] = true; });\r\n    polygonFeatures[tags.key] = {};\r\n    polygonFeatures[tags.key][list] = tagValuesObj;\r\n  }\r\n});\r\n\r\nvar osmtogeojson = {};\r\n\r\nosmtogeojson = function( data, options ) {\r\n\r\n  options = _.merge(\r\n    {\r\n      verbose: false,\r\n      flatProperties: false,\r\n      uninterestingTags: {\r\n        \"source\": true,\r\n        \"source_ref\": true,\r\n        \"source:ref\": true,\r\n        \"history\": true,\r\n        \"attribution\": true,\r\n        \"created_by\": true,\r\n        \"tiger:county\": true,\r\n        \"tiger:tlid\": true,\r\n        \"tiger:upload_uuid\": true\r\n      },\r\n      polygonFeatures: polygonFeatures,\r\n    },\r\n    options\r\n  );\r\n\r\n  var result;\r\n  if ( ((typeof XMLDocument !== \"undefined\") && data instanceof XMLDocument ||\r\n        (typeof XMLDocument === \"undefined\") && data.childNodes) )\r\n    result = _osmXML2geoJSON(data);\r\n  else\r\n    result = _overpassJSON2geoJSON(data);\r\n  return result;\r\n\r\n  function _overpassJSON2geoJSON(json) {\r\n    // sort elements\r\n    var nodes = new Array();\r\n    var ways  = new Array();\r\n    var rels  = new Array();\r\n    // helper functions\r\n    function centerGeometry(object) {\r\n      var pseudoNode = _.clone(object);\r\n      pseudoNode.lat = object.center.lat;\r\n      pseudoNode.lon = object.center.lon;\r\n      pseudoNode.__is_center_placeholder = true;\r\n      nodes.push(pseudoNode);\r\n    }\r\n    function boundsGeometry(object) {\r\n      var pseudoWay = _.clone(object);\r\n      pseudoWay.nodes = [];\r\n      function addPseudoNode(lat,lon,i) {\r\n        var pseudoNode = {\r\n          type:\"node\",\r\n          id:  \"_\"+pseudoWay.type+\"/\"+pseudoWay.id+\"bounds\"+i,\r\n          lat: lat,\r\n          lon: lon\r\n        }\r\n        pseudoWay.nodes.push(pseudoNode.id);\r\n        nodes.push(pseudoNode);\r\n      }\r\n      addPseudoNode(pseudoWay.bounds.minlat,pseudoWay.bounds.minlon,1);\r\n      addPseudoNode(pseudoWay.bounds.maxlat,pseudoWay.bounds.minlon,2);\r\n      addPseudoNode(pseudoWay.bounds.maxlat,pseudoWay.bounds.maxlon,3);\r\n      addPseudoNode(pseudoWay.bounds.minlat,pseudoWay.bounds.maxlon,4);\r\n      pseudoWay.nodes.push(pseudoWay.nodes[0]);\r\n      pseudoWay.__is_bounds_placeholder = true;\r\n      ways.push(pseudoWay);\r\n    }\r\n    function fullGeometryWay(way) {\r\n      function addFullGeometryNode(lat,lon,id) {\r\n        var geometryNode = {\r\n          type:\"node\",\r\n          id:  id,\r\n          lat: lat,\r\n          lon: lon,\r\n          __is_uninteresting: true\r\n        }\r\n        nodes.push(geometryNode);\r\n      }\r\n      if (!_.isArray(way.nodes)) {\r\n        way.nodes = way.geometry.map(function(nd) {\r\n          if (nd !== null) // have to skip ref-less nodes\r\n            return \"_anonymous@\"+nd.lat+\"/\"+nd.lon;\r\n          else\r\n            return \"_anonymous@unknown_location\";\r\n        });\r\n      }\r\n      way.geometry.forEach(function(nd, i) {\r\n        if (nd) {\r\n          addFullGeometryNode(\r\n            nd.lat,\r\n            nd.lon,\r\n            way.nodes[i]\r\n          );\r\n        }\r\n      });\r\n    }\r\n    function fullGeometryRelation(rel) {\r\n      function addFullGeometryNode(lat,lon,id) {\r\n        var geometryNode = {\r\n          type:\"node\",\r\n          id:  id,\r\n          lat: lat,\r\n          lon: lon\r\n        }\r\n        nodes.push(geometryNode);\r\n      }\r\n      function addFullGeometryWay(geometry,id) {\r\n        // shared multipolygon ways cannot be defined multiple times with the same id.\r\n        if (ways.some(function (way) { // todo: this is slow :(\r\n          return way.type == \"way\" && way.id == id;\r\n        })) return;\r\n        var geometryWay = {\r\n          type: \"way\",\r\n          id:   id,\r\n          nodes:[]\r\n        }\r\n        function addFullGeometryWayPseudoNode(lat,lon) {\r\n          // todo? do not save the same pseudo node multiple times\r\n          var geometryPseudoNode = {\r\n            type:\"node\",\r\n            id:  \"_anonymous@\"+lat+\"/\"+lon,\r\n            lat: lat,\r\n            lon: lon,\r\n            __is_uninteresting: true\r\n          }\r\n          geometryWay.nodes.push(geometryPseudoNode.id);\r\n          nodes.push(geometryPseudoNode);\r\n        }\r\n        geometry.forEach(function(nd) {\r\n          if (nd) {\r\n            addFullGeometryWayPseudoNode(\r\n              nd.lat,\r\n              nd.lon\r\n            );\r\n          } else {\r\n            geometryWay.nodes.push(undefined);\r\n          }\r\n        });\r\n        ways.push(geometryWay);\r\n      }\r\n      rel.members.forEach(function(member, i) {\r\n        if (member.type == \"node\") {\r\n          if (member.lat) {\r\n            addFullGeometryNode(\r\n              member.lat,\r\n              member.lon,\r\n              member.ref\r\n            );\r\n          }\r\n        } else if (member.type == \"way\") {\r\n          if (member.geometry) {\r\n            member.ref = \"_fullGeom\"+member.ref;\r\n            addFullGeometryWay(\r\n              member.geometry,\r\n              member.ref\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // create copies of individual json objects to make sure the original data doesn't get altered\r\n    // todo: cloning is slow: see if this can be done differently!\r\n    for (var i=0;i<json.elements.length;i++) {\r\n      switch (json.elements[i].type) {\r\n      case \"node\":\r\n        var node = json.elements[i];\r\n        nodes.push(node);\r\n      break;\r\n      case \"way\":\r\n        var way = _.clone(json.elements[i]);\r\n        way.nodes = _.clone(way.nodes);\r\n        ways.push(way);\r\n        if (way.center)\r\n          centerGeometry(way);\r\n        if (way.geometry)\r\n          fullGeometryWay(way);\r\n        else if (way.bounds)\r\n          boundsGeometry(way);\r\n      break;\r\n      case \"relation\":\r\n        var rel = _.clone(json.elements[i]);\r\n        rel.members = _.clone(rel.members);\r\n        rels.push(rel);\r\n        var has_full_geometry = rel.members && rel.members.some(function (member) {\r\n          return member.type == \"node\" && member.lat ||\r\n                 member.type == \"way\"  && member.geometry && member.geometry.length > 0\r\n        });\r\n        if (rel.center)\r\n          centerGeometry(rel);\r\n        if (has_full_geometry)\r\n          fullGeometryRelation(rel);\r\n        else if (rel.bounds)\r\n          boundsGeometry(rel);\r\n      break;\r\n      default:\r\n      // type=area (from coord-query) is an example for this case.\r\n      }\r\n    }\r\n    return _convert2geoJSON(nodes,ways,rels);\r\n  }\r\n  function _osmXML2geoJSON(xml) {\r\n    // sort elements\r\n    var nodes = new Array();\r\n    var ways  = new Array();\r\n    var rels  = new Array();\r\n    // helper function\r\n    function copy_attribute( x, o, attr ) {\r\n      if (x.hasAttribute(attr))\r\n        o[attr] = x.getAttribute(attr);\r\n    }\r\n    function centerGeometry(object, centroid) {\r\n      var pseudoNode = _.clone(object);\r\n      copy_attribute(centroid, pseudoNode, 'lat');\r\n      copy_attribute(centroid, pseudoNode, 'lon');\r\n      pseudoNode.__is_center_placeholder = true;\r\n      nodes.push(pseudoNode);\r\n    }\r\n    function boundsGeometry(object, bounds) {\r\n      var pseudoWay = _.clone(object);\r\n      pseudoWay.nodes = [];\r\n      function addPseudoNode(lat,lon,i) {\r\n        var pseudoNode = {\r\n          type:\"node\",\r\n          id:  \"_\"+pseudoWay.type+\"/\"+pseudoWay.id+\"bounds\"+i,\r\n          lat: lat,\r\n          lon: lon\r\n        }\r\n        pseudoWay.nodes.push(pseudoNode.id);\r\n        nodes.push(pseudoNode);\r\n      }\r\n      addPseudoNode(bounds.getAttribute('minlat'),bounds.getAttribute('minlon'),1);\r\n      addPseudoNode(bounds.getAttribute('maxlat'),bounds.getAttribute('minlon'),2);\r\n      addPseudoNode(bounds.getAttribute('maxlat'),bounds.getAttribute('maxlon'),3);\r\n      addPseudoNode(bounds.getAttribute('minlat'),bounds.getAttribute('maxlon'),4);\r\n      pseudoWay.nodes.push(pseudoWay.nodes[0]);\r\n      pseudoWay.__is_bounds_placeholder = true;\r\n      ways.push(pseudoWay);\r\n    }\r\n    function fullGeometryWay(way, nds) {\r\n      function addFullGeometryNode(lat,lon,id) {\r\n        var geometryNode = {\r\n          type:\"node\",\r\n          id:  id,\r\n          lat: lat,\r\n          lon: lon,\r\n          __is_uninteresting: true\r\n        }\r\n        nodes.push(geometryNode);\r\n        return geometryNode.id;\r\n      }\r\n      if (!_.isArray(way.nodes)) {\r\n        way.nodes = [];\r\n        _.each( nds, function( nd, i ) {\r\n          way.nodes.push(\"_anonymous@\"+nd.getAttribute('lat')+\"/\"+nd.getAttribute('lon'));\r\n        });\r\n      }\r\n      _.each( nds, function( nd, i ) {\r\n        if (nd.getAttribute('lat')) {\r\n          addFullGeometryNode(\r\n            nd.getAttribute('lat'),\r\n            nd.getAttribute('lon'),\r\n            way.nodes[i]\r\n          );\r\n        }\r\n      });\r\n    }\r\n    function fullGeometryRelation(rel, members) {\r\n      function addFullGeometryNode(lat,lon,id) {\r\n        var geometryNode = {\r\n          type:\"node\",\r\n          id:  id,\r\n          lat: lat,\r\n          lon: lon\r\n        }\r\n        nodes.push(geometryNode);\r\n      }\r\n      function addFullGeometryWay(nds,id) {\r\n        // shared multipolygon ways cannot be defined multiple times with the same id.\r\n        if (ways.some(function (way) { // todo: this is slow :(\r\n          return way.type == \"way\" && way.id == id;\r\n        })) return;\r\n        var geometryWay = {\r\n          type: \"way\",\r\n          id:   id,\r\n          nodes:[]\r\n        }\r\n        function addFullGeometryWayPseudoNode(lat,lon) {\r\n          // todo? do not save the same pseudo node multiple times\r\n          var geometryPseudoNode = {\r\n            type:\"node\",\r\n            id:  \"_anonymous@\"+lat+\"/\"+lon,\r\n            lat: lat,\r\n            lon: lon,\r\n            __is_uninteresting: true\r\n          }\r\n          geometryWay.nodes.push(geometryPseudoNode.id);\r\n          nodes.push(geometryPseudoNode);\r\n        }\r\n        _.each(nds, function(nd) {\r\n          if (nd.getAttribute('lat')) {\r\n            addFullGeometryWayPseudoNode(\r\n              nd.getAttribute('lat'),\r\n              nd.getAttribute('lon')\r\n            );\r\n          } else {\r\n            geometryWay.nodes.push(undefined);\r\n          }\r\n        });\r\n        ways.push(geometryWay);\r\n      }\r\n      _.each( members, function( member, i ) {\r\n        if (rel.members[i].type == \"node\") {\r\n          if (member.getAttribute('lat')) {\r\n            addFullGeometryNode(\r\n              member.getAttribute('lat'),\r\n              member.getAttribute('lon'),\r\n              rel.members[i].ref\r\n            );\r\n          }\r\n        } else if (rel.members[i].type == \"way\") {\r\n          if (member.getElementsByTagName('nd').length > 0) {\r\n            rel.members[i].ref = \"_fullGeom\"+rel.members[i].ref;\r\n            addFullGeometryWay(\r\n              member.getElementsByTagName('nd'),\r\n              rel.members[i].ref\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // nodes\r\n    _.each( xml.getElementsByTagName('node'), function( node, i ) {\r\n      var tags = {};\r\n      _.each( node.getElementsByTagName('tag'), function( tag ) {\r\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\r\n      });\r\n      var nodeObject = {\r\n        'type': 'node'\r\n      };\r\n      copy_attribute( node, nodeObject, 'id' );\r\n      copy_attribute( node, nodeObject, 'lat' );\r\n      copy_attribute( node, nodeObject, 'lon' );\r\n      copy_attribute( node, nodeObject, 'version' );\r\n      copy_attribute( node, nodeObject, 'timestamp' );\r\n      copy_attribute( node, nodeObject, 'changeset' );\r\n      copy_attribute( node, nodeObject, 'uid' );\r\n      copy_attribute( node, nodeObject, 'user' );\r\n      if (!_.isEmpty(tags))\r\n        nodeObject.tags = tags;\r\n      nodes.push(nodeObject);\r\n    });\r\n    // ways\r\n    var centroid,bounds;\r\n    _.each( xml.getElementsByTagName('way'), function( way, i ) {\r\n      var tags = {};\r\n      var wnodes = [];\r\n      _.each( way.getElementsByTagName('tag'), function( tag ) {\r\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\r\n      });\r\n      var has_full_geometry = false;\r\n      _.each( way.getElementsByTagName('nd'), function( nd, i ) {\r\n        var id;\r\n        if (id = nd.getAttribute('ref'))\r\n          wnodes[i] = id;\r\n        if (!has_full_geometry && nd.getAttribute('lat'))\r\n          has_full_geometry = true;\r\n      });\r\n      var wayObject = {\r\n        \"type\": \"way\"\r\n      };\r\n      copy_attribute( way, wayObject, 'id' );\r\n      copy_attribute( way, wayObject, 'version' );\r\n      copy_attribute( way, wayObject, 'timestamp' );\r\n      copy_attribute( way, wayObject, 'changeset' );\r\n      copy_attribute( way, wayObject, 'uid' );\r\n      copy_attribute( way, wayObject, 'user' );\r\n      if (wnodes.length > 0)\r\n        wayObject.nodes = wnodes;\r\n      if (!_.isEmpty(tags))\r\n        wayObject.tags = tags;\r\n      if (centroid = way.getElementsByTagName('center')[0])\r\n        centerGeometry(wayObject,centroid);\r\n      if (has_full_geometry)\r\n        fullGeometryWay(wayObject, way.getElementsByTagName('nd'));\r\n      else if (bounds = way.getElementsByTagName('bounds')[0])\r\n        boundsGeometry(wayObject,bounds);\r\n      ways.push(wayObject);\r\n    });\r\n    // relations\r\n    _.each( xml.getElementsByTagName('relation'), function( relation, i ) {\r\n      var tags = {};\r\n      var members = [];\r\n      _.each( relation.getElementsByTagName('tag'), function( tag ) {\r\n        tags[tag.getAttribute('k')] = tag.getAttribute('v');\r\n      });\r\n      var has_full_geometry = false;\r\n      _.each( relation.getElementsByTagName('member'), function( member, i ) {\r\n        members[i] = {};\r\n        copy_attribute( member, members[i], 'ref' );\r\n        copy_attribute( member, members[i], 'role' );\r\n        copy_attribute( member, members[i], 'type' );\r\n        if (!has_full_geometry &&\r\n             (members[i].type == 'node' && member.getAttribute('lat')) ||\r\n             (members[i].type == 'way'  && member.getElementsByTagName('nd').length>0) )\r\n          has_full_geometry = true;\r\n      });\r\n      var relObject = {\r\n        \"type\": \"relation\"\r\n      }\r\n      copy_attribute( relation, relObject, 'id' );\r\n      copy_attribute( relation, relObject, 'version' );\r\n      copy_attribute( relation, relObject, 'timestamp' );\r\n      copy_attribute( relation, relObject, 'changeset' );\r\n      copy_attribute( relation, relObject, 'uid' );\r\n      copy_attribute( relation, relObject, 'user' );\r\n      if (members.length > 0)\r\n        relObject.members = members;\r\n      if (!_.isEmpty(tags))\r\n        relObject.tags = tags;\r\n      if (centroid = relation.getElementsByTagName('center')[0])\r\n        centerGeometry(relObject,centroid);\r\n      if (has_full_geometry)\r\n        fullGeometryRelation(relObject, relation.getElementsByTagName('member'));\r\n      else if (bounds = relation.getElementsByTagName('bounds')[0])\r\n        boundsGeometry(relObject,bounds);\r\n      rels.push(relObject);\r\n    });\r\n    return _convert2geoJSON(nodes,ways,rels);\r\n  }\r\n  function _convert2geoJSON(nodes,ways,rels) {\r\n\r\n    // helper function that checks if there are any tags other than \"created_by\", \"source\", etc. or any tag provided in ignore_tags\r\n    function has_interesting_tags(t, ignore_tags) {\r\n      if (typeof ignore_tags !== \"object\")\r\n        ignore_tags={};\r\n      if (typeof options.uninterestingTags === \"function\")\r\n        return !options.uninterestingTags(t, ignore_tags);\r\n      for (var k in t)\r\n        if (!(options.uninterestingTags[k]===true) &&\r\n            !(ignore_tags[k]===true || ignore_tags[k]===t[k]))\r\n          return true;\r\n      return false;\r\n    };\r\n    // helper function to extract meta information\r\n    function build_meta_information(object) {\r\n      var res = {\r\n        \"timestamp\": object.timestamp,\r\n        \"version\": object.version,\r\n        \"changeset\": object.changeset,\r\n        \"user\": object.user,\r\n        \"uid\": object.uid\r\n      };\r\n      for (var k in res)\r\n        if (res[k] === undefined)\r\n          delete res[k];\r\n      return res;\r\n    }\r\n\r\n    // some data processing (e.g. filter nodes only used for ways)\r\n    var nodeids = new Object();\r\n    for (var i=0;i<nodes.length;i++) {\r\n      if (nodes[i].lat === undefined) {\r\n        if (options.verbose) console.warn('Node',nodes[i].type+'/'+nodes[i].id,'ignored because it has no coordinates');\r\n        continue; // ignore nodes without coordinates (e.g. returned by an ids_only query)\r\n      }\r\n      nodeids[nodes[i].id] = nodes[i];\r\n    }\r\n    var poinids = new Object();\r\n    for (var i=0;i<nodes.length;i++) {\r\n      if (typeof nodes[i].tags != 'undefined' &&\r\n          has_interesting_tags(nodes[i].tags)) // this checks if the node has any tags other than \"created_by\"\r\n        poinids[nodes[i].id] = true;\r\n    }\r\n    for (var i=0;i<rels.length;i++) {\r\n      if (!_.isArray(rels[i].members)) {\r\n        if (options.verbose) console.warn('Relation',rels[i].type+'/'+rels[i].id,'ignored because it has no members');\r\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\r\n      }\r\n      for (var j=0;j<rels[i].members.length;j++) {\r\n        if (rels[i].members[j].type == \"node\")\r\n          poinids[rels[i].members[j].ref] = true;\r\n      }\r\n    }\r\n    var wayids = new Object();\r\n    var waynids = new Object();\r\n    for (var i=0;i<ways.length;i++) {\r\n      if (!_.isArray(ways[i].nodes)) {\r\n        if (options.verbose) console.warn('Way',ways[i].type+'/'+ways[i].id,'ignored because it has no nodes');\r\n        continue; // ignore ways without nodes (e.g. returned by an ids_only query)\r\n      }\r\n      wayids[ways[i].id] = ways[i];\r\n      for (var j=0;j<ways[i].nodes.length;j++) {\r\n        waynids[ways[i].nodes[j]] = true;\r\n        ways[i].nodes[j] = nodeids[ways[i].nodes[j]];\r\n      }\r\n    }\r\n    var pois = new Array();\r\n    for (var i=0;i<nodes.length;i++) {\r\n      if (((!waynids[nodes[i].id]) ||\r\n          (poinids[nodes[i].id])) &&\r\n          !nodes[i].__is_uninteresting)\r\n        pois.push(nodes[i]);\r\n    }\r\n    var relids = new Array();\r\n    for (var i=0;i<rels.length;i++) {\r\n      if (!_.isArray(rels[i].members)) {\r\n        if (options.verbose) console.warn('Relation',rels[i].type+'/'+rels[i].id,'ignored because it has no members');\r\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\r\n      }\r\n      relids[rels[i].id] = rels[i];\r\n    }\r\n    var relsmap = {node: {}, way: {}, relation: {}};\r\n    for (var i=0;i<rels.length;i++) {\r\n      if (!_.isArray(rels[i].members)) {\r\n        if (options.verbose) console.warn('Relation',rels[i].type+'/'+rels[i].id,'ignored because it has no members');\r\n        continue; // ignore relations without members (e.g. returned by an ids_only query)\r\n      }\r\n      for (var j=0;j<rels[i].members.length;j++) {\r\n        var m_type = rels[i].members[j].type;\r\n        var m_ref = rels[i].members[j].ref;\r\n        if (typeof m_ref !== \"number\") {\r\n          // de-namespace full geometry content\r\n          m_ref = m_ref.replace(\"_fullGeom\", \"\");\r\n        }\r\n        if (!relsmap[m_type]) {\r\n          if (options.verbose) console.warn('Relation',rels[i].type+'/'+rels[i].id,'member',m_type+'/'+m_ref,'ignored because it has an invalid type');\r\n          continue;\r\n        }\r\n        if (typeof relsmap[m_type][m_ref] === \"undefined\")\r\n          relsmap[m_type][m_ref] = [];\r\n        relsmap[m_type][m_ref].push({\r\n          \"role\" : rels[i].members[j].role,\r\n          \"rel\" : rels[i].id,\r\n          \"reltags\" : rels[i].tags,\r\n        });\r\n      }\r\n    }\r\n    // construct geojson\r\n    var geojson;\r\n    var geojsonnodes = {\r\n      \"type\"     : \"FeatureCollection\",\r\n      \"features\" : new Array()};\r\n    for (i=0;i<pois.length;i++) {\r\n      if (typeof pois[i].lon == \"undefined\" || typeof pois[i].lat == \"undefined\") {\r\n        if (options.verbose) console.warn('POI',pois[i].type+'/'+pois[i].id,'ignored because it lacks coordinates');\r\n        continue; // lon and lat are required for showing a point\r\n      }\r\n      var feature = {\r\n        \"type\"       : \"Feature\",\r\n        \"id\"         : pois[i].type+\"/\"+pois[i].id,\r\n        \"properties\" : {\r\n          \"type\" : pois[i].type,\r\n          \"id\"   : pois[i].id,\r\n          \"tags\" : pois[i].tags || {},\r\n          \"relations\" : relsmap[\"node\"][pois[i].id] || [],\r\n          \"meta\": build_meta_information(pois[i])\r\n        },\r\n        \"geometry\"   : {\r\n          \"type\" : \"Point\",\r\n          \"coordinates\" : [+pois[i].lon, +pois[i].lat],\r\n        }\r\n      };\r\n      if (pois[i].__is_center_placeholder)\r\n        feature.properties[\"geometry\"] = \"center\";\r\n      geojsonnodes.features.push(feature);\r\n    }\r\n    var geojsonlines = {\r\n      \"type\"     : \"FeatureCollection\",\r\n      \"features\" : new Array()};\r\n    var geojsonpolygons = {\r\n      \"type\"     : \"FeatureCollection\",\r\n      \"features\" : new Array()};\r\n    // process multipolygons\r\n    for (var i=0;i<rels.length;i++) {\r\n      if ((typeof rels[i].tags != \"undefined\") &&\r\n          (rels[i].tags[\"type\"] == \"multipolygon\" || rels[i].tags[\"type\"] == \"boundary\")) {\r\n        if (!_.isArray(rels[i].members)) {\r\n          if (options.verbose) console.warn('Multipolygon',rels[i].type+'/'+rels[i].id,'ignored because it has no members');\r\n          continue; // ignore relations without members (e.g. returned by an ids_only query)\r\n        }\r\n        var outer_count = 0;\r\n        for (var j=0;j<rels[i].members.length;j++)\r\n          if (rels[i].members[j].role == \"outer\")\r\n            outer_count++;\r\n          else if (options.verbose && rels[i].members[j].role != \"inner\")\r\n            console.warn('Multipolygon',rels[i].type+'/'+rels[i].id,'member',rels[i].members[j].type+'/'+rels[i].members[j].ref,'ignored because it has an invalid role: \"' + rels[i].members[j].role + '\"');\r\n        rels[i].members.forEach(function(m) {\r\n          if (wayids[m.ref]) {\r\n            // this even works in the following corner case:\r\n            // a multipolygon amenity=xxx with outer line tagged amenity=yyy\r\n            // see https://github.com/tyrasd/osmtogeojson/issues/7\r\n            if (m.role===\"outer\" && !has_interesting_tags(wayids[m.ref].tags,rels[i].tags))\r\n              wayids[m.ref].is_multipolygon_outline = true;\r\n            if (m.role===\"inner\" && !has_interesting_tags(wayids[m.ref].tags))\r\n              wayids[m.ref].is_multipolygon_outline = true;\r\n          }\r\n        });\r\n        if (outer_count == 0) {\r\n          if (options.verbose) console.warn('Multipolygon relation',rels[i].type+'/'+rels[i].id,'ignored because it has no outer ways');\r\n          continue; // ignore multipolygons without outer ways\r\n        }\r\n        var simple_mp = false;\r\n        var mp_geometry = '';\r\n        if (outer_count == 1 && !has_interesting_tags(rels[i].tags, {\"type\":true}))\r\n          simple_mp = true;\r\n        var feature = null;\r\n        if (!simple_mp) {\r\n          feature = construct_multipolygon(rels[i], rels[i]);\r\n        } else {\r\n          // simple multipolygon\r\n          var outer_way = rels[i].members.filter(function(m) {return m.role === \"outer\";})[0];\r\n          outer_way = wayids[outer_way.ref];\r\n          if (outer_way === undefined) {\r\n            if (options.verbose) console.warn('Multipolygon relation',rels[i].type+'/'+rels[i].id,'ignored because outer way', outer_way.type+'/'+outer_way.ref,'is missing');\r\n            continue; // abort if outer way object is not present\r\n          }\r\n          outer_way.is_multipolygon_outline = true;\r\n          feature = construct_multipolygon(outer_way, rels[i]);\r\n        }\r\n        if (feature === false) {\r\n          if (options.verbose) console.warn('Multipolygon relation',rels[i].type+'/'+rels[i].id,'ignored because it has invalid geometry');\r\n          continue; // abort if feature could not be constructed\r\n        }\r\n        geojsonpolygons.features.push(feature);\r\n        function construct_multipolygon(tag_object, rel) {\r\n          var is_tainted = false;\r\n          var mp_geometry = simple_mp ? 'way' : 'relation',\r\n              mp_id = typeof tag_object.id === \"number\" ? tag_object.id : +(tag_object.id.replace(\"_fullGeom\", \"\"));\r\n          // prepare mp members\r\n          var members;\r\n          members = rel.members.filter(function(m) {return m.type === \"way\";});\r\n          members = members.map(function(m) {\r\n            var way = wayids[m.ref];\r\n            if (way === undefined) { // check for missing ways\r\n              if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'tainted by a missing way', m.type+'/'+m.ref);\r\n              is_tainted = true;\r\n              return;\r\n            }\r\n            return { // TODO: this is slow! :(\r\n              id: m.ref,\r\n              role: m.role || \"outer\",\r\n              way: way,\r\n              nodes: way.nodes.filter(function(n) {\r\n                if (n !== undefined)\r\n                  return true;\r\n                is_tainted = true;\r\n                if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id,  'tainted by a way', m.type+'/'+m.ref, 'with a missing node');\r\n                return false;\r\n              })\r\n            };\r\n          });\r\n          members = _.compact(members);\r\n          // construct outer and inner rings\r\n          var outers, inners;\r\n          function join(ways) {\r\n            var _first = function(arr) {return arr[0]};\r\n            var _last  = function(arr) {return arr[arr.length-1]};\r\n            // stolen from iD/relation.js\r\n            var joined = [], current, first, last, i, how, what;\r\n            while (ways.length) {\r\n              current = ways.pop().nodes.slice();\r\n              joined.push(current);\r\n              while (ways.length && _first(current) !== _last(current)) {\r\n                first = _first(current);\r\n                last  = _last(current);\r\n                for (i = 0; i < ways.length; i++) {\r\n                  what = ways[i].nodes;\r\n                  if (last === _first(what)) {\r\n                    how  = current.push;\r\n                    what = what.slice(1);\r\n                    break;\r\n                  } else if (last === _last(what)) {\r\n                    how  = current.push;\r\n                    what = what.slice(0, -1).reverse();\r\n                    break;\r\n                  } else if (first == _last(what)) {\r\n                    how  = current.unshift;\r\n                    what = what.slice(0, -1);\r\n                    break;\r\n                  } else if (first == _first(what)) {\r\n                    how  = current.unshift;\r\n                    what = what.slice(1).reverse();\r\n                    break;\r\n                  } else {\r\n                    what = how = null;\r\n                  }\r\n                }\r\n                if (!what) {\r\n                  if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'contains unclosed ring geometry');\r\n                  break; // Invalid geometry (dangling way, unclosed ring)\r\n                }\r\n                ways.splice(i, 1);\r\n                how.apply(current, what);\r\n              }\r\n            }\r\n            return joined;\r\n          }\r\n          outers = join(members.filter(function(m) {return m.role===\"outer\";}));\r\n          inners = join(members.filter(function(m) {return m.role===\"inner\";}));\r\n          // sort rings\r\n          var mp;\r\n          function findOuter(inner) {\r\n            var polygonIntersectsPolygon = function(outer, inner) {\r\n              for (var i=0; i<inner.length; i++)\r\n                if (pointInPolygon(inner[i], outer))\r\n                  return true;\r\n              return false;\r\n            }\r\n            var mapCoordinates = function(from) {\r\n              return from.map(function(n) {\r\n                return [+n.lat,+n.lon];\r\n              });\r\n            }\r\n            // stolen from iD/geo.js,\r\n            // based on https://github.com/substack/point-in-polygon,\r\n            // ray-casting algorithm based on http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n            var pointInPolygon = function(point, polygon) {\r\n              var x = point[0], y = point[1], inside = false;\r\n              for (var i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\r\n                var xi = polygon[i][0], yi = polygon[i][1];\r\n                var xj = polygon[j][0], yj = polygon[j][1];\r\n                var intersect = ((yi > y) != (yj > y)) &&\r\n                  (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n                if (intersect) inside = !inside;\r\n              }\r\n              return inside;\r\n            };\r\n            // stolen from iD/relation.js\r\n            var o, outer;\r\n            // todo: all this coordinate mapping makes this unneccesarily slow.\r\n            // see the \"todo: this is slow! :(\" above.\r\n            inner = mapCoordinates(inner);\r\n            /*for (o = 0; o < outers.length; o++) {\r\n              outer = mapCoordinates(outers[o]);\r\n              if (polygonContainsPolygon(outer, inner))\r\n                return o;\r\n            }*/\r\n            for (o = 0; o < outers.length; o++) {\r\n              outer = mapCoordinates(outers[o]);\r\n              if (polygonIntersectsPolygon(outer, inner))\r\n                return o;\r\n            }\r\n          }\r\n          mp = outers.map(function(o) {return [o];});\r\n          for (var j=0; j<inners.length; j++) {\r\n            var o = findOuter(inners[j]);\r\n            if (o !== undefined)\r\n              mp[o].push(inners[j]);\r\n            else\r\n              if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'contains an inner ring with no containing outer');\r\n              // so, no outer ring for this inner ring is found.\r\n              // We're going to ignore holes in empty space.\r\n              ;\r\n          }\r\n          // sanitize mp-coordinates (remove empty clusters or rings, {lat,lon,...} to [lon,lat]\r\n          var mp_coords = [];\r\n          mp_coords = _.compact(mp.map(function(cluster) {\r\n            var cl = _.compact(cluster.map(function(ring) {\r\n              if (ring.length < 4) { // todo: is this correct: ring.length < 4 ?\r\n                if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'contains a ring with less than four nodes');\r\n                return;\r\n              }\r\n              return _.compact(ring.map(function(node) {\r\n                return [+node.lon,+node.lat];\r\n              }));\r\n            }));\r\n            if (cl.length == 0) {\r\n              if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'contains an empty ring cluster');\r\n              return;\r\n            }\r\n            return cl;\r\n          }));\r\n\r\n          if (mp_coords.length == 0) {\r\n            if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'contains no coordinates');\r\n            return false; // ignore multipolygons without coordinates\r\n          }\r\n          var mp_type = \"MultiPolygon\";\r\n          if (mp_coords.length === 1) {\r\n            mp_type = \"Polygon\";\r\n            mp_coords = mp_coords[0];\r\n          }\r\n          // mp parsed, now construct the geoJSON\r\n          var feature = {\r\n            \"type\"       : \"Feature\",\r\n            \"id\"         : tag_object.type+\"/\"+mp_id,\r\n            \"properties\" : {\r\n              \"type\" : tag_object.type,\r\n              \"id\"   : mp_id,\r\n              \"tags\" : tag_object.tags || {},\r\n              \"relations\" :  relsmap[tag_object.type][tag_object.id] || [],\r\n              \"meta\": build_meta_information(tag_object)\r\n            },\r\n            \"geometry\"   : {\r\n              \"type\" : mp_type,\r\n              \"coordinates\" : mp_coords,\r\n            }\r\n          }\r\n          if (is_tainted) {\r\n            if (options.verbose) console.warn('Multipolygon', mp_geometry+'/'+mp_id, 'is tainted');\r\n            feature.properties[\"tainted\"] = true;\r\n          }\r\n          return feature;\r\n        }\r\n      }\r\n    }\r\n    // process lines and polygons\r\n    for (var i=0;i<ways.length;i++) {\r\n      if (!_.isArray(ways[i].nodes)) {\r\n        if (options.verbose) console.warn('Way',ways[i].type+'/'+ways[i].id,'ignored because it has no nodes');\r\n        continue; // ignore ways without nodes (e.g. returned by an ids_only query)\r\n      }\r\n      if (ways[i].is_multipolygon_outline)\r\n        continue; // ignore ways which are already rendered as (part of) a multipolygon\r\n      if (typeof ways[i].id !== \"number\") {\r\n        // remove full geometry namespace for output\r\n        ways[i].id = +ways[i].id.replace(\"_fullGeom\", \"\");\r\n      }\r\n      ways[i].tainted = false;\r\n      ways[i].hidden = false;\r\n      var coords = new Array();\r\n      for (j=0;j<ways[i].nodes.length;j++) {\r\n        if (typeof ways[i].nodes[j] == \"object\")\r\n          coords.push([+ways[i].nodes[j].lon, +ways[i].nodes[j].lat]);\r\n        else {\r\n          if (options.verbose) console.warn('Way',ways[i].type+'/'+ways[i].id,'is tainted by an invalid node');\r\n          ways[i].tainted = true;\r\n        }\r\n      }\r\n      if (coords.length <= 1) { // invalid way geometry\r\n        if (options.verbose) console.warn('Way',ways[i].type+'/'+ways[i].id,'ignored because it contains too few nodes');\r\n        continue;\r\n      }\r\n      var way_type = \"LineString\"; // default\r\n      if (typeof ways[i].nodes[0] != \"undefined\" && // way has its nodes loaded\r\n        ways[i].nodes[0] === ways[i].nodes[ways[i].nodes.length-1] && // ... and forms a closed ring\r\n        (\r\n          typeof ways[i].tags != \"undefined\" && // ... and has tags\r\n          _isPolygonFeature(ways[i].tags) // ... and tags say it is a polygon\r\n          || // or is a placeholder for a bounds geometry\r\n          ways[i].__is_bounds_placeholder\r\n        )\r\n      ) {\r\n        way_type = \"Polygon\";\r\n        coords = [coords];\r\n      }\r\n      var feature = {\r\n        \"type\"       : \"Feature\",\r\n        \"id\"         : ways[i].type+\"/\"+ways[i].id,\r\n        \"properties\" : {\r\n          \"type\" : ways[i].type,\r\n          \"id\"   : ways[i].id,\r\n          \"tags\" : ways[i].tags || {},\r\n          \"relations\" : relsmap[\"way\"][ways[i].id] || [],\r\n          \"meta\": build_meta_information(ways[i])\r\n        },\r\n        \"geometry\"   : {\r\n          \"type\" : way_type,\r\n          \"coordinates\" : coords,\r\n        }\r\n      }\r\n      if (ways[i].tainted) {\r\n        if (options.verbose) console.warn('Way',ways[i].type+'/'+ways[i].id,'is tainted');\r\n        feature.properties[\"tainted\"] = true;\r\n      }\r\n      if (ways[i].__is_bounds_placeholder)\r\n        feature.properties[\"geometry\"] = \"bounds\";\r\n      if (way_type == \"LineString\")\r\n        geojsonlines.features.push(feature);\r\n      else\r\n        geojsonpolygons.features.push(feature);\r\n    }\r\n\r\n    geojson = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"features\": []\r\n    };\r\n    geojson.features = geojson.features.concat(geojsonpolygons.features);\r\n    geojson.features = geojson.features.concat(geojsonlines.features);\r\n    geojson.features = geojson.features.concat(geojsonnodes.features);\r\n    // optionally, flatten properties\r\n    if (options.flatProperties) {\r\n      geojson.features.forEach(function(f) {\r\n        f.properties = _.merge(\r\n          f.properties.meta,\r\n          f.properties.tags,\r\n          {id: f.properties.type+\"/\"+f.properties.id}\r\n        );\r\n      });\r\n    }\r\n    // fix polygon winding\r\n    geojson = rewind(geojson, true /*remove for geojson-rewind >0.1.0*/);\r\n    return geojson;\r\n  }\r\n  function _isPolygonFeature( tags ) {\r\n    var polygonFeatures = options.polygonFeatures;\r\n    if (typeof polygonFeatures === \"function\")\r\n      return polygonFeatures(tags);\r\n    // explicitely tagged non-areas\r\n    if ( tags['area'] === 'no' )\r\n      return false;\r\n    // assuming that a typical OSM way has in average less tags than\r\n    // the polygonFeatures list, this way around should be faster\r\n    for ( var key in tags ) {\r\n      var val = tags[key];\r\n      var pfk = polygonFeatures[key];\r\n      // continue with next if tag is unknown or not \"categorizing\"\r\n      if ( typeof pfk === 'undefined' )\r\n        continue;\r\n      // continue with next if tag is explicitely un-set (\"building=no\")\r\n      if ( val === 'no' )\r\n        continue;\r\n      // check polygon features for: general acceptance, included or excluded values\r\n      if ( pfk === true )\r\n        return true;\r\n      if ( pfk.included_values && pfk.included_values[val] === true )\r\n        return true;\r\n      if ( pfk.excluded_values && pfk.excluded_values[val] !== true )\r\n        return true;\r\n    }\r\n    // if no tags matched, this ain't no area.\r\n    return false;\r\n  }\r\n};\r\n\r\n// for backwards compatibility\r\nosmtogeojson.toGeojson = osmtogeojson;\r\n\r\nmodule.exports = osmtogeojson;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}