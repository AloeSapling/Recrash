{"ast":null,"code":"// import React from \"react\";\n// import { GeoJSON } from \"react-leaflet\";\n// const overpass = require(\"query-overpass\");\n\n// export default class Castles extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       geojson: undefined\n//     };\n//   }\n\n//   componentDidMount() {\n//     const query = `[out:json];(way[historic=castle](around:10000, 50.0874654,14.4212535);\\\n//                               relation[historic=castle](around:10000, 50.0874654,14.4212535););\\\n//                               out body;>;out skel qt;`;\n//     const options = {\n//       flatProperties: true,\n//       overpassUrl: \"https://overpass-api.de/api/interpreter\"\n//     };\n//     overpass(query, this.dataHandler, options);\n//   }\n\n//   dataHandler = (error, osmData) => {\n//     if (!error && osmData.features !== undefined) {\n//       this.setState({ geojson: osmData });\n//     }\n//   };\n\n//   render() {\n//     return this.state.geojson ? <GeoJSON data={this.state.geojson} /> : null;\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Komputer 2020/Desktop/bruhjd/src/components/test.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { GeoJSON } from \"react-leaflet\";\r\n// const overpass = require(\"query-overpass\");\r\n\r\n// export default class Castles extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       geojson: undefined\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const query = `[out:json];(way[historic=castle](around:10000, 50.0874654,14.4212535);\\\r\n//                               relation[historic=castle](around:10000, 50.0874654,14.4212535););\\\r\n//                               out body;>;out skel qt;`;\r\n//     const options = {\r\n//       flatProperties: true,\r\n//       overpassUrl: \"https://overpass-api.de/api/interpreter\"\r\n//     };\r\n//     overpass(query, this.dataHandler, options);\r\n//   }\r\n\r\n//   dataHandler = (error, osmData) => {\r\n//     if (!error && osmData.features !== undefined) {\r\n//       this.setState({ geojson: osmData });\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return this.state.geojson ? <GeoJSON data={this.state.geojson} /> : null;\r\n//   }\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}