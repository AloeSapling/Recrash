{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer 2020\\\\Desktop\\\\hakaton-projekt\\\\src\\\\components\\\\map.jsx\",\n  _s3 = $RefreshSig$();\nimport React, { Component, useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Popup, Marker, withLeaflet, useMapEvents, LayerGroup, LayersControl, useMap } from \"react-leaflet\";\nimport '../css/map.css';\nimport { GeoJSON } from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport { latLng } from \"leaflet\";\nimport { OpenStreetMapProvider, GeoSearchControl } from \"leaflet-geosearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst overpass = require(\"query-overpass\");\n\n// const MyMarker = props => {\n//   const initMarker = ref => {\n//     if (ref) {\n//       ref.leafletElement.openPopup()\n//     }\n//   }\n\n//   return <Marker ref={initMarker} {...props}/>\n// }\n\n// const LocationFinderDummy = () => {\n//   const map = useMapEvents({\n//       click(e) {\n//           this.setState({currentPos})\n//       },\n//   });\n//   return null;  \n// };\n\nfunction Mapa() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const mapBounds = [[-90, -180], [90, 180]];\n  const [lat, setLat] = useState();\n  const [lng, setLng] = useState();\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     currentPos: null\n  //   };\n  //   this.handleClick = this.handleClick.bind(this);\n  // }\n\n  const _created = e => console.log(e);\n  const Search = props => {\n    _s();\n    const map = useMap();\n    useEffect(() => {\n      const provider = new OpenStreetMapProvider();\n      const searchControl = new GeoSearchControl({\n        provider\n      });\n      map.addControl(searchControl);\n      return () => map.removeControl(searchControl);\n    }, [props]);\n    return null;\n  };\n  _s(Search, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n  const LocationFinderDummy = () => {\n    _s2();\n    const map = useMapEvents({\n      click(e) {\n        console.log(e.latlng);\n        setLat(e.latlng.lat);\n        setLng(e.latlng.lng);\n        console.log(lat, lng);\n      }\n    });\n    return null;\n  };\n  _s2(LocationFinderDummy, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", false, function () {\n    return [useMapEvents];\n  });\n  console.log([lat, lng]);\n  class Bins extends React.Component {\n    constructor(props) {\n      super(props);\n      this.dataHandler = (error, osmData) => {\n        if (!error && osmData.features !== undefined) {\n          this.setState({\n            geojson: osmData\n          });\n        }\n      };\n      this.state = {\n        geojson: undefined\n      };\n    }\n    componentDidMount() {\n      const query = ` [out:json];(way[amenity=recycling](around:99999, ${[lat, lng]});\\\n        relation[amenity=recycling](around:99999, ${[lat, lng]}););\n        out body;>;out skel qt;`;\n      const options = {\n        flatProperties: true,\n        overpassUrl: 'https://overpass-api.de/api/interpreter'\n      };\n      overpass(query, this.dataHandler, options);\n    }\n    render() {\n      return this.state.geojson ? /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: this.state.geojson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      maxBounds: mapBounds,\n      className: \"map\",\n      zoom: 8,\n      center: {\n        lat: 51.5287718,\n        lng: -0.2416804\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LocationFinderDummy, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bins, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n        children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          name: 'mapa poczÄ…tkowa',\n          checked: true,\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\",\n            subdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n            attribution: \"&copy <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            noWrap: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          name: 'satelita',\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n            subdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n            attribution: \"Tiles &copy Esri &mdash Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n            noWrap: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n_s3(Mapa, \"9VhwZQDqtZuyyef/C4oOIRFKzqs=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","Component","useState","useEffect","MapContainer","TileLayer","Popup","Marker","withLeaflet","useMapEvents","LayerGroup","LayersControl","useMap","GeoJSON","latLng","OpenStreetMapProvider","GeoSearchControl","jsxDEV","_jsxDEV","overpass","require","Mapa","_s3","_s","$RefreshSig$","_s2","mapBounds","lat","setLat","lng","setLng","_created","e","console","log","Search","props","map","provider","searchControl","addControl","removeControl","LocationFinderDummy","click","latlng","Bins","constructor","dataHandler","error","osmData","features","undefined","setState","geojson","state","componentDidMount","query","options","flatProperties","overpassUrl","render","data","fileName","_jsxFileName","lineNumber","columnNumber","children","maxBounds","className","zoom","center","url","BaseLayer","name","checked","subdomains","attribution","noWrap","_c","$RefreshReg$"],"sources":["C:/Users/Komputer 2020/Desktop/hakaton-projekt/src/components/map.jsx"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {MapContainer, TileLayer, Popup, Marker, withLeaflet, useMapEvents, LayerGroup, LayersControl, useMap} from \"react-leaflet\";\r\nimport '../css/map.css'\r\nimport { GeoJSON } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { latLng } from \"leaflet\";\r\nimport { OpenStreetMapProvider, GeoSearchControl } from \"leaflet-geosearch\"\r\nconst overpass = require(\"query-overpass\");\r\n\r\n// const MyMarker = props => {\r\n//   const initMarker = ref => {\r\n//     if (ref) {\r\n//       ref.leafletElement.openPopup()\r\n//     }\r\n//   }\r\n\r\n//   return <Marker ref={initMarker} {...props}/>\r\n// }\r\n\r\n\r\n// const LocationFinderDummy = () => {\r\n//   const map = useMapEvents({\r\n//       click(e) {\r\n//           this.setState({currentPos})\r\n//       },\r\n//   });\r\n//   return null;  \r\n// };\r\n\r\n\r\nfunction Mapa() {\r\n  \r\n  const mapBounds = [\r\n    [-90, -180],\r\n    [90, 180],\r\n  ]\r\n\r\n  const [lat , setLat] = useState()\r\n  const [lng , setLng] = useState()\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     currentPos: null\r\n  //   };\r\n  //   this.handleClick = this.handleClick.bind(this);\r\n  // }\r\n    \r\n\r\n  const _created = (e) => console.log(e)\r\n  const Search = (props) => {\r\n    const map = useMap()\r\n\r\n    useEffect(() => {\r\n      const provider = new OpenStreetMapProvider()\r\n\r\n      const searchControl = new GeoSearchControl({\r\n        provider,\r\n      })\r\n\r\n      map.addControl(searchControl)\r\n      return () => map.removeControl(searchControl)\r\n    }, [props])\r\n    return null\r\n  }\r\n\r\n\r\n   const LocationFinderDummy = () => {\r\n    const map = useMapEvents({\r\n        click(e) {\r\n            console.log(e.latlng);\r\n            setLat(e.latlng.lat)\r\n            setLng(e.latlng.lng)\r\n            console.log(lat, lng)\r\n        },\r\n    });\r\n    return null;  \r\n  };\r\n    console.log([lat,lng]);\r\n\r\n    class Bins extends React.Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          geojson: undefined\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        const query = ` [out:json];(way[amenity=recycling](around:99999, ${[lat , lng]});\\\r\n        relation[amenity=recycling](around:99999, ${[lat , lng]}););\r\n        out body;>;out skel qt;`;\r\n        \r\n        \r\n        const options = {\r\n          flatProperties: true,\r\n          overpassUrl: 'https://overpass-api.de/api/interpreter'\r\n        };\r\n        overpass(query, this.dataHandler, options);\r\n      }\r\n    \r\n      dataHandler = (error, osmData) => {\r\n        if (!error && osmData.features !== undefined) {\r\n          this.setState({ geojson: osmData });\r\n        }\r\n      };\r\n    \r\n      render() {\r\n        return this.state.geojson ? <GeoJSON data={this.state.geojson} /> : null;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <MapContainer maxBounds={mapBounds} className=\"map\" zoom={8} center={{ lat: 51.5287718, lng: -0.2416804 }} >\r\n          <TileLayer\r\n              url='https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png'\r\n          />\r\n          <LocationFinderDummy/>\r\n          <Bins/>\r\n          <LayersControl>\r\n          <LayersControl.BaseLayer name={'mapa poczÄ…tkowa'} checked>\r\n            <TileLayer\r\n              url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\"\r\n              subdomains={[\"mt0\", \"mt1\", \"mt2\", \"mt3\"]}\r\n              attribution='&copy <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              noWrap={true}\r\n            />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.BaseLayer name={'satelita'}>\r\n            <TileLayer\r\n              url=\"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\r\n              subdomains={[\"mt0\", \"mt1\", \"mt2\", \"mt3\"]}\r\n              attribution=\"Tiles &copy Esri &mdash Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\r\n              noWrap={true}\r\n            />\r\n          </LayersControl.BaseLayer>\r\n        </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Mapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}