{"ast":null,"code":"/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash exports=\"node\" include=\"clone,merge,isEmpty,isArray,compact,each\" -d`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;\n(function () {\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to fix the JScript [[DontEnum]] bug */\n  var shadowedProps = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    errorClass = '[object Error]',\n    funcClass = '[object Function]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used as the data object for `iteratorTemplate` */\n  var iteratorData = {\n    'args': '',\n    'array': null,\n    'bottom': '',\n    'firstArg': '',\n    'init': '',\n    'keys': null,\n    'loop': '',\n    'shadowedProps': null,\n    'support': null,\n    'top': '',\n    'useHas': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used as a reference to the global object */\n  var root = objectTypes[typeof window] && window || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n      length = end - start || 0,\n      result = Array(length < 0 ? 0 : length);\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Used for native method references */\n  var errorProto = Error.prototype,\n    objectProto = Object.prototype,\n    stringProto = String.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/toString| for [^\\]]+/g, '.*?') + '$');\n\n  /** Native method shortcuts */\n  var fnToString = Function.prototype.toString,\n    getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n    hasOwnProperty = objectProto.hasOwnProperty,\n    push = arrayRef.push,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    unshift = arrayRef.unshift;\n\n  /** Used to set meta data on functions */\n  var defineProperty = function () {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n        func = isNative(func = Object.defineProperty) && func,\n        result = func(o, o, o) && func;\n    } catch (e) {}\n    return result;\n  }();\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n    nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n    nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[funcClass] = Function;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to avoid iterating non-enumerable properties in IE < 9 */\n  var nonEnumProps = {};\n  nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = {\n    'constructor': true,\n    'toLocaleString': true,\n    'toString': true,\n    'valueOf': true\n  };\n  nonEnumProps[boolClass] = nonEnumProps[stringClass] = {\n    'constructor': true,\n    'toString': true,\n    'valueOf': true\n  };\n  nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = {\n    'constructor': true,\n    'toString': true\n  };\n  nonEnumProps[objectClass] = {\n    'constructor': true\n  };\n  (function () {\n    var length = shadowedProps.length;\n    while (length--) {\n      var key = shadowedProps[length];\n      for (var className in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {\n          nonEnumProps[className][key] = false;\n        }\n      }\n    }\n  })();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n   * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n   * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n   * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n   * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n   * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n   * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n   * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n   * and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash() {\n    // no operation performed\n  }\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = lodash.support = {};\n  (function () {\n    var ctor = function () {\n        this.x = 1;\n      },\n      object = {\n        '0': 1,\n        'length': 1\n      },\n      props = [];\n    ctor.prototype = {\n      'valueOf': 1,\n      'y': 1\n    };\n    for (var key in new ctor()) {\n      props.push(key);\n    }\n    for (key in arguments) {}\n\n    /**\n     * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsClass = toString.call(arguments) == argsClass;\n\n    /**\n     * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);\n\n    /**\n     * Detect if `name` or `message` properties of `Error.prototype` are\n     * enumerable by default. (IE < 9, Safari < 5.1)\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');\n\n    /**\n     * Detect if `prototype` properties are enumerable by default.\n     *\n     * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n     * (if the prototype or a property on the prototype has been set)\n     * incorrectly sets a function's `prototype` property [[Enumerable]]\n     * value to `true`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function () {\n      return this;\n    });\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * Detect if `arguments` object indexes are non-enumerable\n     * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumArgs = key != 0;\n\n    /**\n     * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n     *\n     * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n     * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumShadows = !/valueOf/.test(props);\n\n    /**\n     * Detect if own properties are iterated after inherited properties (all but IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.ownLast = props[0] != 'x';\n\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n\n    /**\n     * Detect lack of support for accessing string characters by index.\n     *\n     * IE < 8 can't access characters by index and IE 8 can only access\n     * characters by index on string literals.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.unindexedChars = 'x'[0] + Object('x')[0] != 'xx';\n\n    /**\n     * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n     * and that the JS engine errors when attempting to coerce an object to\n     * a string without a `toString` function.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.nodeClass = !(toString.call(document) == objectClass && !({\n        'toString': 0\n      } + ''));\n    } catch (e) {\n      support.nodeClass = true;\n    }\n  })(1);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Object} data The data object used to populate the text.\n   * @returns {string} Returns the interpolated text.\n   */\n  var iteratorTemplate = function (obj) {\n    var __p = 'var index, iterable = ' + obj.firstArg + ', result = ' + obj.init + ';\\nif (!iterable) return result;\\n' + obj.top + ';';\n    if (obj.array) {\n      __p += '\\nvar length = iterable.length; index = -1;\\nif (' + obj.array + ') {  ';\n      if (support.unindexedChars) {\n        __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n      }\n      __p += '\\n  while (++index < length) {\\n    ' + obj.loop + ';\\n  }\\n}\\nelse {  ';\n    } else if (support.nonEnumArgs) {\n      __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' + obj.loop + ';\\n    }\\n  } else {  ';\n    }\n    if (support.enumPrototypes) {\n      __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n    }\n    if (support.enumErrorProps) {\n      __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n    }\n    var conditions = [];\n    if (support.enumPrototypes) {\n      conditions.push('!(skipProto && index == \"prototype\")');\n    }\n    if (support.enumErrorProps) {\n      conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))');\n    }\n    if (obj.useHas && obj.keys) {\n      __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n      if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n      __p += obj.loop + ';    ';\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n      __p += '\\n  }  ';\n    } else {\n      __p += '\\n  for (index in iterable) {\\n';\n      if (obj.useHas) {\n        conditions.push(\"hasOwnProperty.call(iterable, index)\");\n      }\n      if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n      __p += obj.loop + ';    ';\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n      __p += '\\n  }    ';\n      if (support.nonEnumShadows) {\n        __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n        for (k = 0; k < 7; k++) {\n          __p += '\\n    index = \\'' + obj.shadowedProps[k] + '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n          if (!obj.useHas) {\n            __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n          }\n          __p += ') {\\n      ' + obj.loop + ';\\n    }      ';\n        }\n        __p += '\\n  }    ';\n      }\n    }\n    if (obj.array || support.nonEnumArgs) {\n      __p += '\\n}';\n    }\n    __p += obj.bottom + ';\\nreturn result';\n    return __p;\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n      partialArgs = bindData[2],\n      thisArg = bindData[4];\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n          result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.clone` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, isDeep, callback, stackA, stackB) {\n    if (callback) {\n      var result = callback(value);\n      if (typeof result != 'undefined') {\n        return result;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(value);\n    if (isObj) {\n      var className = toString.call(value);\n      if (!cloneableClasses[className] || !support.nodeClass && isNode(value)) {\n        return value;\n      }\n      var ctor = ctorByClass[className];\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          return new ctor(+value);\n        case numberClass:\n        case stringClass:\n          return new ctor(value);\n        case regexpClass:\n          result = ctor(value.source, reFlags.exec(value));\n          result.lastIndex = value.lastIndex;\n          return result;\n      }\n    } else {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isDeep) {\n      // check for circular references and return corresponding clone\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      result = isArr ? ctor(value.length) : {};\n    } else {\n      result = isArr ? slice(value) : assign({}, value);\n    }\n    // add array properties assigned by `RegExp#exec`\n    if (isArr) {\n      if (hasOwnProperty.call(value, 'index')) {\n        result.index = value.index;\n      }\n      if (hasOwnProperty.call(value, 'input')) {\n        result.input = value.input;\n      }\n    }\n    // exit for shallow clone\n    if (!isDeep) {\n      return result;\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? baseEach : forOwn)(value, function (objValue, key) {\n      result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n    });\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = function () {\n      function Object() {}\n      return function (prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object();\n          Object.prototype = null;\n        }\n        return result || root.Object();\n      };\n    }();\n  }\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || bindData !== true && bindData[1] & 1) {\n      return func;\n    }\n    switch (argCount) {\n      case 1:\n        return function (value) {\n          return func.call(thisArg, value);\n        };\n      case 2:\n        return function (a, b) {\n          return func.call(thisArg, a, b);\n        };\n      case 3:\n        return function (value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n    }\n    return bind(func, thisArg);\n  }\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n      bitmask = bindData[1],\n      partialArgs = bindData[2],\n      partialRightArgs = bindData[3],\n      thisArg = bindData[4],\n      arity = bindData[5];\n    var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      key = func;\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, isCurryBound ? bitmask : bitmask & ~3, args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.merge` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   */\n  function baseMerge(object, source, callback, stackA, stackB) {\n    (isArray(source) ? forEach : forOwn)(source, function (source, key) {\n      var found,\n        isArr,\n        result = source,\n        value = object[key];\n      if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n        // avoid merging previously merged cyclic sources\n        var stackLength = stackA.length;\n        while (stackLength--) {\n          if (found = stackA[stackLength] == source) {\n            value = stackB[stackLength];\n            break;\n          }\n        }\n        if (!found) {\n          var isShallow;\n          if (callback) {\n            result = callback(value, source);\n            if (isShallow = typeof result != 'undefined') {\n              value = result;\n            }\n          }\n          if (!isShallow) {\n            value = isArr ? isArray(value) ? value : [] : isPlainObject(value) ? value : {};\n          }\n          // add `source` and associated `value` to the stack of traversed objects\n          stackA.push(source);\n          stackB.push(value);\n\n          // recursively merge objects and arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            baseMerge(value, source, callback, stackA, stackB);\n          }\n        }\n      } else {\n        if (callback) {\n          result = callback(value, source);\n          if (typeof result == 'undefined') {\n            result = source;\n          }\n        }\n        if (typeof result != 'undefined') {\n          value = result;\n        }\n      }\n      object[key] = value;\n    });\n  }\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      isPartial = bitmask & 16,\n      isPartialRight = bitmask & 32;\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError();\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      }\n      // set `thisBinding` is not previously bound\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      }\n      // set if previously bound but not currently (subsequent curried functions)\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      }\n      // set curried arity if not yet set\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      }\n      // append partial left arguments\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      }\n      // append partial right arguments\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      }\n      // merge flags\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    }\n    // fast path for `_.bind`\n    var creater = bitmask == 1 || bitmask === 17 ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {...Object} [options] The compile options object(s).\n   * @param {string} [options.array] Code to determine if the iterable is an array or array-like.\n   * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.\n   * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.\n   * @param {string} [options.args] A comma separated string of iteration function arguments.\n   * @param {string} [options.top] Code to execute before the iteration branches.\n   * @param {string} [options.loop] Code to execute in the object loop.\n   * @param {string} [options.bottom] Code to execute after the iteration branches.\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    // data properties\n    iteratorData.shadowedProps = shadowedProps;\n\n    // iterator options\n    iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';\n    iteratorData.init = 'iterable';\n    iteratorData.useHas = true;\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        iteratorData[key] = object[key];\n      }\n    }\n    var args = iteratorData.args;\n    iteratorData.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function('baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' + 'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' + 'objectTypes, nonEnumProps, stringClass, stringProto, toString', 'return function(' + args + ') {\\n' + iteratorTemplate(iteratorData) + '\\n}');\n\n    // return the compiled function\n    return factory(baseCreateCallback, errorClass, errorProto, hasOwnProperty, indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto, objectTypes, nonEnumProps, stringClass, stringProto, toString);\n  }\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function (func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` which checks if a given value\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    var ctor, result;\n\n    // avoid non Object objects, `arguments` objects, and DOM elements\n    if (!(value && toString.call(value) == objectClass) || (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor)) || !support.argsClass && isArguments(value) || !support.nodeClass && isNode(value)) {\n      return false;\n    }\n    // IE < 9 iterates inherited properties before own properties. If the first\n    // iterated property is an object's own property then there are no inherited\n    // enumerable properties.\n    if (support.ownLast) {\n      forIn(value, function (value, key, object) {\n        result = hasOwnProperty.call(object, key);\n        return false;\n      });\n      return result !== false;\n    }\n    // In most environments an object's own properties are iterated before\n    // its inherited properties. If the last iterated property is an object's\n    // own property then there are no inherited enumerable properties.\n    forIn(value, function (value, key) {\n      result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == argsClass || false;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (!support.argsClass) {\n    isArguments = function (value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;\n    };\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function (value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == arrayClass || false;\n  };\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = createIterator({\n    'args': 'object',\n    'init': '[]',\n    'top': 'if (!(objectTypes[typeof object])) return result',\n    'loop': 'result.push(index)'\n  });\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function (object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    if (support.enumPrototypes && typeof object == 'function' || support.nonEnumArgs && object.length && isArguments(object)) {\n      return shimKeys(object);\n    }\n    return nativeKeys(object);\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)\",\n    'array': \"typeof length == 'number'\",\n    'keys': keys,\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top': 'var args = arguments,\\n' + '    argsIndex = 0,\\n' + \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" + 'while (++argsIndex < argsLength) {\\n' + '  iterable = args[argsIndex];\\n' + '  if (iterable && objectTypes[typeof iterable]) {',\n    'keys': keys,\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'array': false\n  };\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the callback for each\n   * element in the collection. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   */\n  var baseEach = createIterator(eachIteratorOptions);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top': defaultsIteratorOptions.top.replace(';', ';\\n' + \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" + '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' + \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" + '  callback = args[--argsLength];\\n' + '}'),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var shallow = _.clone(characters);\n   * shallow[0] === characters[0];\n   * // => true\n   *\n   * var deep = _.clone(characters, true);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, isDeep, callback, thisArg) {\n    // allows working with \"Collections\" methods without using their `index`\n    // and `collection` arguments for `isDeep` and `callback`\n    if (typeof isDeep != 'boolean' && isDeep != null) {\n      thisArg = callback;\n      callback = isDeep;\n      isDeep = false;\n    }\n    return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n      length = value.length;\n    if (className == arrayClass || className == stringClass || (support.argsClass ? className == argsClass : isArguments(value)) || className == objectClass && typeof length == 'number' && isFunction(value.splice)) {\n      return !length;\n    }\n    forOwn(value, function () {\n      return result = false;\n    });\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function (value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  /**\n   * Checks if `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * _.isPlainObject(new Shape);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\n    if (!(value && toString.call(value) == objectClass) || !support.argsClass && isArguments(value)) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n      objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n    return objProto ? value == objProto || getPrototypeOf(value) == objProto : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined` into the destination object. Subsequent sources\n   * will overwrite property assignments of previous sources. If a callback is\n   * provided it will be executed to produce the merged values of the destination\n   * and source properties. If the callback returns `undefined` merging will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object) {\n    var args = arguments,\n      length = 2;\n    if (!isObject(object)) {\n      return object;\n    }\n    // allows working with `_.reduce` and `_.reduceRight` without using\n    // their `index` and `collection` arguments\n    if (typeof args[2] != 'number') {\n      length = args.length;\n    }\n    if (length > 3 && typeof args[length - 2] == 'function') {\n      var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n    } else if (length > 2 && typeof args[length - 1] == 'function') {\n      callback = args[--length];\n    }\n    var sources = slice(arguments, 1, length),\n      index = -1,\n      stackA = getArray(),\n      stackB = getArray();\n    while (++index < length) {\n      baseMerge(object, sources[index], callback, stackA, stackB);\n    }\n    releaseArray(stackA);\n    releaseArray(stackB);\n    return object;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * Note: As with other \"Collections\" methods, objects with a `length` property\n   * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n   * may be used for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n        length = collection.length;\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      baseEach(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n      length = array ? array.length : 0,\n      result = [];\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  lodash.assign = assign;\n  lodash.bind = bind;\n  lodash.compact = compact;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.keys = keys;\n  lodash.merge = merge;\n  lodash.each = forEach;\n  lodash.extend = assign;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.identity = identity;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isEmpty = isEmpty;\n  lodash.isFunction = isFunction;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isString = isString;\n  lodash.noop = noop;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n  lodash.VERSION = '2.4.1';\n\n  /*--------------------------------------------------------------------------*/\n\n  if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n  }\n}).call(this);","map":{"version":3,"names":["arrayPool","indicatorObject","maxPoolSize","reFlags","reFuncName","reThis","shadowedProps","argsClass","arrayClass","boolClass","dateClass","errorClass","funcClass","numberClass","objectClass","regexpClass","stringClass","cloneableClasses","descriptor","iteratorData","objectTypes","root","window","freeExports","exports","nodeType","freeModule","module","moduleExports","freeGlobal","global","getArray","pop","isNode","value","toString","releaseArray","array","length","push","slice","start","end","index","result","Array","arrayRef","errorProto","Error","prototype","objectProto","Object","stringProto","String","reNative","RegExp","replace","fnToString","Function","getPrototypeOf","isNative","hasOwnProperty","propertyIsEnumerable","unshift","defineProperty","o","func","e","nativeCreate","create","nativeIsArray","isArray","nativeKeys","keys","ctorByClass","Boolean","Date","Number","nonEnumProps","key","className","call","lodash","support","ctor","x","object","props","arguments","argsObject","constructor","enumErrorProps","enumPrototypes","funcDecomp","WinRTError","test","funcNames","name","nonEnumArgs","nonEnumShadows","ownLast","spliceObjects","splice","unindexedChars","nodeClass","document","iteratorTemplate","obj","__p","firstArg","init","top","loop","conditions","useHas","join","k","bottom","baseBind","bindData","partialArgs","thisArg","bound","args","apply","thisBinding","baseCreate","isObject","setBindData","baseClone","isDeep","callback","stackA","stackB","isObj","source","exec","lastIndex","isArr","initedStack","assign","input","baseEach","forOwn","objValue","properties","baseCreateCallback","argCount","identity","__bindData__","a","b","collection","accumulator","bind","baseCreateWrapper","bitmask","partialRightArgs","arity","isBind","isBindKey","isCurry","isCurryBound","baseMerge","forEach","found","isPlainObject","stackLength","isShallow","createWrapper","isPartial","isPartialRight","isFunction","TypeError","creater","createIterator","factory","isArguments","isString","noop","shimIsPlainObject","forIn","shimKeys","eachIteratorOptions","defaultsIteratorOptions","forOwnIteratorOptions","clone","isEmpty","valueOf","objProto","merge","sources","compact","each","extend","VERSION","_"],"sources":["C:/Users/Komputer 2020/Desktop/bruhjd/node_modules/osmtogeojson/lodash.custom.js"],"sourcesContent":["/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash exports=\"node\" include=\"clone,merge,isEmpty,isArray,compact,each\" -d`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to fix the JScript [[DontEnum]] bug */\n  var shadowedProps = [\n    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n    'toLocaleString', 'toString', 'valueOf'\n  ];\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      errorClass = '[object Error]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used as the data object for `iteratorTemplate` */\n  var iteratorData = {\n    'args': '',\n    'array': null,\n    'bottom': '',\n    'firstArg': '',\n    'init': '',\n    'keys': null,\n    'loop': '',\n    'shadowedProps': null,\n    'support': null,\n    'top': '',\n    'useHas': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Used for native method references */\n  var errorProto = Error.prototype,\n      objectProto = Object.prototype,\n      stringProto = String.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    String(toString)\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n  );\n\n  /** Native method shortcuts */\n  var fnToString = Function.prototype.toString,\n      getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      push = arrayRef.push,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\n      unshift = arrayRef.unshift;\n\n  /** Used to set meta data on functions */\n  var defineProperty = (function() {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch(e) { }\n    return result;\n  }());\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[funcClass] = Function;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to avoid iterating non-enumerable properties in IE < 9 */\n  var nonEnumProps = {};\n  nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[boolClass] = nonEnumProps[stringClass] = { 'constructor': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = { 'constructor': true, 'toString': true };\n  nonEnumProps[objectClass] = { 'constructor': true };\n\n  (function() {\n    var length = shadowedProps.length;\n    while (length--) {\n      var key = shadowedProps[length];\n      for (var className in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {\n          nonEnumProps[className][key] = false;\n        }\n      }\n    }\n  }());\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n   * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n   * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n   * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n   * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n   * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n   * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n   * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n   * and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash() {\n    // no operation performed\n  }\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = lodash.support = {};\n\n  (function() {\n    var ctor = function() { this.x = 1; },\n        object = { '0': 1, 'length': 1 },\n        props = [];\n\n    ctor.prototype = { 'valueOf': 1, 'y': 1 };\n    for (var key in new ctor) { props.push(key); }\n    for (key in arguments) { }\n\n    /**\n     * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsClass = toString.call(arguments) == argsClass;\n\n    /**\n     * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);\n\n    /**\n     * Detect if `name` or `message` properties of `Error.prototype` are\n     * enumerable by default. (IE < 9, Safari < 5.1)\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');\n\n    /**\n     * Detect if `prototype` properties are enumerable by default.\n     *\n     * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n     * (if the prototype or a property on the prototype has been set)\n     * incorrectly sets a function's `prototype` property [[Enumerable]]\n     * value to `true`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function() { return this; });\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * Detect if `arguments` object indexes are non-enumerable\n     * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumArgs = key != 0;\n\n    /**\n     * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n     *\n     * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n     * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumShadows = !/valueOf/.test(props);\n\n    /**\n     * Detect if own properties are iterated after inherited properties (all but IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.ownLast = props[0] != 'x';\n\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n\n    /**\n     * Detect lack of support for accessing string characters by index.\n     *\n     * IE < 8 can't access characters by index and IE 8 can only access\n     * characters by index on string literals.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n\n    /**\n     * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n     * and that the JS engine errors when attempting to coerce an object to\n     * a string without a `toString` function.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.nodeClass = !(toString.call(document) == objectClass && !({ 'toString': 0 } + ''));\n    } catch(e) {\n      support.nodeClass = true;\n    }\n  }(1));\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Object} data The data object used to populate the text.\n   * @returns {string} Returns the interpolated text.\n   */\n  var iteratorTemplate = function(obj) {\n\n    var __p = 'var index, iterable = ' +\n    (obj.firstArg) +\n    ', result = ' +\n    (obj.init) +\n    ';\\nif (!iterable) return result;\\n' +\n    (obj.top) +\n    ';';\n     if (obj.array) {\n    __p += '\\nvar length = iterable.length; index = -1;\\nif (' +\n    (obj.array) +\n    ') {  ';\n     if (support.unindexedChars) {\n    __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n     }\n    __p += '\\n  while (++index < length) {\\n    ' +\n    (obj.loop) +\n    ';\\n  }\\n}\\nelse {  ';\n     } else if (support.nonEnumArgs) {\n    __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' +\n    (obj.loop) +\n    ';\\n    }\\n  } else {  ';\n     }\n\n     if (support.enumPrototypes) {\n    __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n     }\n\n     if (support.enumErrorProps) {\n    __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n     }\n\n        var conditions = [];    if (support.enumPrototypes) { conditions.push('!(skipProto && index == \"prototype\")'); }    if (support.enumErrorProps)  { conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))'); }\n\n     if (obj.useHas && obj.keys) {\n    __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n        if (conditions.length) {\n    __p += '    if (' +\n    (conditions.join(' && ')) +\n    ') {\\n  ';\n     }\n    __p +=\n    (obj.loop) +\n    ';    ';\n     if (conditions.length) {\n    __p += '\\n    }';\n     }\n    __p += '\\n  }  ';\n     } else {\n    __p += '\\n  for (index in iterable) {\\n';\n        if (obj.useHas) { conditions.push(\"hasOwnProperty.call(iterable, index)\"); }    if (conditions.length) {\n    __p += '    if (' +\n    (conditions.join(' && ')) +\n    ') {\\n  ';\n     }\n    __p +=\n    (obj.loop) +\n    ';    ';\n     if (conditions.length) {\n    __p += '\\n    }';\n     }\n    __p += '\\n  }    ';\n     if (support.nonEnumShadows) {\n    __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n     for (k = 0; k < 7; k++) {\n    __p += '\\n    index = \\'' +\n    (obj.shadowedProps[k]) +\n    '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n            if (!obj.useHas) {\n    __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n     }\n    __p += ') {\\n      ' +\n    (obj.loop) +\n    ';\\n    }      ';\n     }\n    __p += '\\n  }    ';\n     }\n\n     }\n\n     if (obj.array || support.nonEnumArgs) {\n    __p += '\\n}';\n     }\n    __p +=\n    (obj.bottom) +\n    ';\\nreturn result';\n\n    return __p\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.clone` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, isDeep, callback, stackA, stackB) {\n    if (callback) {\n      var result = callback(value);\n      if (typeof result != 'undefined') {\n        return result;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(value);\n    if (isObj) {\n      var className = toString.call(value);\n      if (!cloneableClasses[className] || (!support.nodeClass && isNode(value))) {\n        return value;\n      }\n      var ctor = ctorByClass[className];\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          return new ctor(+value);\n\n        case numberClass:\n        case stringClass:\n          return new ctor(value);\n\n        case regexpClass:\n          result = ctor(value.source, reFlags.exec(value));\n          result.lastIndex = value.lastIndex;\n          return result;\n      }\n    } else {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isDeep) {\n      // check for circular references and return corresponding clone\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      result = isArr ? ctor(value.length) : {};\n    }\n    else {\n      result = isArr ? slice(value) : assign({}, value);\n    }\n    // add array properties assigned by `RegExp#exec`\n    if (isArr) {\n      if (hasOwnProperty.call(value, 'index')) {\n        result.index = value.index;\n      }\n      if (hasOwnProperty.call(value, 'input')) {\n        result.input = value.input;\n      }\n    }\n    // exit for shallow clone\n    if (!isDeep) {\n      return result;\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? baseEach : forOwn)(value, function(objValue, key) {\n      result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n    });\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || root.Object();\n      };\n    }());\n  }\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 2: return function(a, b) {\n        return func.call(thisArg, a, b);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n    }\n    return bind(func, thisArg);\n  }\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.merge` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   */\n  function baseMerge(object, source, callback, stackA, stackB) {\n    (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n      var found,\n          isArr,\n          result = source,\n          value = object[key];\n\n      if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n        // avoid merging previously merged cyclic sources\n        var stackLength = stackA.length;\n        while (stackLength--) {\n          if ((found = stackA[stackLength] == source)) {\n            value = stackB[stackLength];\n            break;\n          }\n        }\n        if (!found) {\n          var isShallow;\n          if (callback) {\n            result = callback(value, source);\n            if ((isShallow = typeof result != 'undefined')) {\n              value = result;\n            }\n          }\n          if (!isShallow) {\n            value = isArr\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {});\n          }\n          // add `source` and associated `value` to the stack of traversed objects\n          stackA.push(source);\n          stackB.push(value);\n\n          // recursively merge objects and arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            baseMerge(value, source, callback, stackA, stackB);\n          }\n        }\n      }\n      else {\n        if (callback) {\n          result = callback(value, source);\n          if (typeof result == 'undefined') {\n            result = source;\n          }\n        }\n        if (typeof result != 'undefined') {\n          value = result;\n        }\n      }\n      object[key] = value;\n    });\n  }\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError;\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      }\n      // set `thisBinding` is not previously bound\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      }\n      // set if previously bound but not currently (subsequent curried functions)\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      }\n      // set curried arity if not yet set\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      }\n      // append partial left arguments\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      }\n      // append partial right arguments\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      }\n      // merge flags\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    }\n    // fast path for `_.bind`\n    var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {...Object} [options] The compile options object(s).\n   * @param {string} [options.array] Code to determine if the iterable is an array or array-like.\n   * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.\n   * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.\n   * @param {string} [options.args] A comma separated string of iteration function arguments.\n   * @param {string} [options.top] Code to execute before the iteration branches.\n   * @param {string} [options.loop] Code to execute in the object loop.\n   * @param {string} [options.bottom] Code to execute after the iteration branches.\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    // data properties\n    iteratorData.shadowedProps = shadowedProps;\n\n    // iterator options\n    iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';\n    iteratorData.init = 'iterable';\n    iteratorData.useHas = true;\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        iteratorData[key] = object[key];\n      }\n    }\n    var args = iteratorData.args;\n    iteratorData.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' +\n        'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' +\n        'objectTypes, nonEnumProps, stringClass, stringProto, toString',\n      'return function(' + args + ') {\\n' + iteratorTemplate(iteratorData) + '\\n}'\n    );\n\n    // return the compiled function\n    return factory(\n      baseCreateCallback, errorClass, errorProto, hasOwnProperty,\n      indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto,\n      objectTypes, nonEnumProps, stringClass, stringProto, toString\n    );\n  }\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function(func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` which checks if a given value\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    var ctor,\n        result;\n\n    // avoid non Object objects, `arguments` objects, and DOM elements\n    if (!(value && toString.call(value) == objectClass) ||\n        (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor)) ||\n        (!support.argsClass && isArguments(value)) ||\n        (!support.nodeClass && isNode(value))) {\n      return false;\n    }\n    // IE < 9 iterates inherited properties before own properties. If the first\n    // iterated property is an object's own property then there are no inherited\n    // enumerable properties.\n    if (support.ownLast) {\n      forIn(value, function(value, key, object) {\n        result = hasOwnProperty.call(object, key);\n        return false;\n      });\n      return result !== false;\n    }\n    // In most environments an object's own properties are iterated before\n    // its inherited properties. If the last iterated property is an object's\n    // own property then there are no inherited enumerable properties.\n    forIn(value, function(value, key) {\n      result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == argsClass || false;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (!support.argsClass) {\n    isArguments = function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;\n    };\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == arrayClass || false;\n  };\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = createIterator({\n    'args': 'object',\n    'init': '[]',\n    'top': 'if (!(objectTypes[typeof object])) return result',\n    'loop': 'result.push(index)'\n  });\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    if ((support.enumPrototypes && typeof object == 'function') ||\n        (support.nonEnumArgs && object.length && isArguments(object))) {\n      return shimKeys(object);\n    }\n    return nativeKeys(object);\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)\",\n    'array': \"typeof length == 'number'\",\n    'keys': keys,\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top':\n      'var args = arguments,\\n' +\n      '    argsIndex = 0,\\n' +\n      \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" +\n      'while (++argsIndex < argsLength) {\\n' +\n      '  iterable = args[argsIndex];\\n' +\n      '  if (iterable && objectTypes[typeof iterable]) {',\n    'keys': keys,\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'array': false\n  };\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the callback for each\n   * element in the collection. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   */\n  var baseEach = createIterator(eachIteratorOptions);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top':\n      defaultsIteratorOptions.top.replace(';',\n        ';\\n' +\n        \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" +\n        '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' +\n        \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" +\n        '  callback = args[--argsLength];\\n' +\n        '}'\n      ),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var shallow = _.clone(characters);\n   * shallow[0] === characters[0];\n   * // => true\n   *\n   * var deep = _.clone(characters, true);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, isDeep, callback, thisArg) {\n    // allows working with \"Collections\" methods without using their `index`\n    // and `collection` arguments for `isDeep` and `callback`\n    if (typeof isDeep != 'boolean' && isDeep != null) {\n      thisArg = callback;\n      callback = isDeep;\n      isDeep = false;\n    }\n    return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        (support.argsClass ? className == argsClass : isArguments(value))) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  /**\n   * Checks if `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * _.isPlainObject(new Shape);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && toString.call(value) == objectClass) || (!support.argsClass && isArguments(value))) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? (value == objProto || getPrototypeOf(value) == objProto)\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined` into the destination object. Subsequent sources\n   * will overwrite property assignments of previous sources. If a callback is\n   * provided it will be executed to produce the merged values of the destination\n   * and source properties. If the callback returns `undefined` merging will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object) {\n    var args = arguments,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    }\n    // allows working with `_.reduce` and `_.reduceRight` without using\n    // their `index` and `collection` arguments\n    if (typeof args[2] != 'number') {\n      length = args.length;\n    }\n    if (length > 3 && typeof args[length - 2] == 'function') {\n      var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n    } else if (length > 2 && typeof args[length - 1] == 'function') {\n      callback = args[--length];\n    }\n    var sources = slice(arguments, 1, length),\n        index = -1,\n        stackA = getArray(),\n        stackB = getArray();\n\n    while (++index < length) {\n      baseMerge(object, sources[index], callback, stackA, stackB);\n    }\n    releaseArray(stackA);\n    releaseArray(stackB);\n    return object;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * Note: As with other \"Collections\" methods, objects with a `length` property\n   * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n   * may be used for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      baseEach(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2\n      ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n      : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  lodash.assign = assign;\n  lodash.bind = bind;\n  lodash.compact = compact;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.keys = keys;\n  lodash.merge = merge;\n\n  lodash.each = forEach;\n  lodash.extend = assign;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.identity = identity;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isEmpty = isEmpty;\n  lodash.isFunction = isFunction;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isString = isString;\n  lodash.noop = noop;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n  lodash.VERSION = '2.4.1';\n\n  /*--------------------------------------------------------------------------*/\n\n  if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n\n  }\n\n}.call(this));\n"],"mappings":"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CjE,OAAOgG,QAAQ,CAAChG,MAAM,CAAC;IACzB;IACA,OAAOd,UAAU,CAACc,MAAM,CAAC;EAC3B,CAAC;;EAED;EACA,IAAIiG,mBAAmB,GAAG;IACxB,MAAM,EAAE,+BAA+B;IACvC,KAAK,EAAE,4GAA4G;IACnH,OAAO,EAAE,2BAA2B;IACpC,MAAM,EAAE9G,IAAI;IACZ,MAAM,EAAE;EACV,CAAC;;EAED;EACA,IAAI+G,uBAAuB,GAAG;IAC5B,MAAM,EAAE,uBAAuB;IAC/B,KAAK,EACH,yBAAyB,GACzB,sBAAsB,GACtB,gEAAgE,GAChE,sCAAsC,GACtC,iCAAiC,GACjC,mDAAmD;IACrD,MAAM,EAAE/G,IAAI;IACZ,MAAM,EAAE,0EAA0E;IAClF,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,IAAIgH,qBAAqB,GAAG;IAC1B,KAAK,EAAE,qDAAqD,GAAGF,mBAAmB,CAACxE,GAAG;IACtF,OAAO,EAAE;EACX,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI+B,QAAQ,GAAGiC,cAAc,CAACQ,mBAAmB,CAAC;;EAElD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI3C,MAAM,GAAGmC,cAAc,CAACS,uBAAuB,EAAE;IACnD,KAAK,EACHA,uBAAuB,CAACzE,GAAG,CAACvD,OAAO,CAAC,GAAG,EACrC,KAAK,GACL,sEAAsE,GACtE,uFAAuF,GACvF,6EAA6E,GAC7E,oCAAoC,GACpC,GACF,CAAC;IACH,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"script","externalDependencies":[]}