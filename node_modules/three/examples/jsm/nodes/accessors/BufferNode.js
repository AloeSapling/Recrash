import UniformNode from '../core/UniformNode.js';
import { addNodeClass } from '../core/Node.js';
<<<<<<< HEAD
import { nodeObject } from '../shadernode/ShaderNode.js';
=======
import { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';
>>>>>>> 39788b5e01a4817c1ea46a2f2383841e87dacb23

class BufferNode extends UniformNode {

	constructor( value, bufferType, bufferCount = 0 ) {

		super( value, bufferType );

		this.isBufferNode = true;

		this.bufferType = bufferType;
		this.bufferCount = bufferCount;

	}

	getInputType( /*builder*/ ) {

		return 'buffer';

	}

}

export default BufferNode;

<<<<<<< HEAD
export const buffer = ( value, type, count ) => nodeObject( new BufferNode( value, type, count ) );
=======
export const buffer = ( value, nodeOrType, count ) => nodeObject( new BufferNode( value, getConstNodeType( nodeOrType ), count ) );
>>>>>>> 39788b5e01a4817c1ea46a2f2383841e87dacb23

addNodeClass( BufferNode );
